{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/chat/ChatFeed.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { Message } from \"./Message\";\nimport { usePolling } from \"../../hooks/usePolling\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { getMessages } from \"../../helpers/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatFeed(_ref) {\n  _s();\n\n  let {\n    chatType,\n    id\n  } = _ref;\n  const user = useContext(UserContext);\n  const [messages, setMessages] = useState([]);\n\n  async function refreshMessages() {\n    const messages = await getMessages(user.id, chatType, id);\n    setMessages(messages);\n  }\n\n  usePolling(refreshMessages, [chatType, id, name], 5000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__feed\",\n    children: messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatFeed, \"zPsUwvvcSMeF/2XfPGj5uCCdGo0=\", false, function () {\n  return [usePolling];\n});\n\n_c = ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/chat/ChatFeed.tsx"],"names":["useState","useContext","Message","usePolling","UserContext","getMessages","ChatFeed","chatType","id","user","messages","setMessages","refreshMessages","name","map","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAGA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAOA,OAAO,SAASC,QAAT,OAA2C;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAyB;AAChD,QAAMC,IAAI,GAAGR,UAAU,CAACG,WAAD,CAAvB;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAgB,EAAhB,CAAxC;;AAEA,iBAAeY,eAAf,GAAiC;AAC/B,UAAMF,QAAQ,GAAG,MAAML,WAAW,CAACI,IAAI,CAACD,EAAN,EAAUD,QAAV,EAAoBC,EAApB,CAAlC;AAEAG,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AAEDP,EAAAA,UAAU,CAACS,eAAD,EAAkB,CAACL,QAAD,EAAWC,EAAX,EAAeK,IAAf,CAAlB,EAAwC,IAAxC,CAAV;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACGH,QAAQ,CAACI,GAAT,CAAcC,OAAD,IAAa;AACzB,0BAAO,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAcA,OAAO,CAACP,EAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnBeF,Q;UAUdH,U;;;KAVcG,Q","sourcesContent":["import { useState, useContext } from \"react\";\nimport { Message } from \"./Message\";\nimport { MessageType } from \"../../types\";\nimport { MESSAGE_TYPE } from \"../../constants\";\nimport { usePolling } from \"../../hooks/usePolling\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { getMessages } from \"../../helpers/index\";\n\ntype Props = {\n  chatType: MESSAGE_TYPE;\n  id: string;\n};\n\nexport function ChatFeed({ chatType, id }: Props) {\n  const user = useContext(UserContext);\n  const [messages, setMessages] = useState<MessageType[]>([]);\n\n  async function refreshMessages() {\n    const messages = await getMessages(user.id, chatType, id);\n\n    setMessages(messages);\n  }\n\n  usePolling(refreshMessages, [chatType, id, name], 5000);\n\n  return (\n    <div className=\"chat__feed\">\n      {messages.map((message) => {\n        return <Message key={message.id} message={message} />;\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}