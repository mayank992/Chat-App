{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/Sidebar.tsx\";\nimport { CollapsibleList, ListItem } from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Sidebar(_ref) {\n  let {\n    users,\n    channels,\n    selectedUserId,\n    onUserChange,\n    onChannelChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"sidebar__header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollapsibleList, {\n      title: \"Channels\",\n      children: channels.map(channel => /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollapsibleList, {\n      title: \"Direct messages\",\n      selectedId: selectedUserId,\n      onChange: onUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/Sidebar.tsx"],"names":["CollapsibleList","ListItem","Sidebar","users","channels","selectedUserId","onUserChange","onChannelChange","map","channel"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,QAA1B,QAAuE,QAAvE;;AAYA,OAAO,SAASC,OAAT,OAMG;AAAA,MANc;AACtBC,IAAAA,KADsB;AAEtBC,IAAAA,QAFsB;AAGtBC,IAAAA,cAHsB;AAItBC,IAAAA,YAJsB;AAKtBC,IAAAA;AALsB,GAMd;AACR,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,UAAvB;AAAA,gBACGH,QAAQ,CAACI,GAAT,CAAcC,OAAD,iBACZ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,eAAD;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,UAAU,EAAEJ,cAFd;AAGE,MAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KAtBeJ,O","sourcesContent":["import { CollapsibleList, ListItem, ListItemIcon, ListItemBadge } from \"./List\";\nimport { UserType, ChannelType } from \"../main/types\";\nimport { channel } from \"diagnostics_channel\";\n\ntype Props = {\n  users: UserType[];\n  channels: ChannelType[];\n  selectedUserId: string;\n  onUserChange: any;\n  onChannelChange: any;\n};\n\nexport function Sidebar({\n  users,\n  channels,\n  selectedUserId,\n  onUserChange,\n  onChannelChange,\n}: Props) {\n  return (\n    <div className=\"sidebar\">\n      <header className=\"sidebar__header\"></header>\n      <CollapsibleList title=\"Channels\">\n        {channels.map((channel) => (\n          <ListItem></ListItem>\n        ))}\n      </CollapsibleList>\n      <CollapsibleList\n        title=\"Direct messages\"\n        selectedId={selectedUserId}\n        onChange={onUserChange}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}