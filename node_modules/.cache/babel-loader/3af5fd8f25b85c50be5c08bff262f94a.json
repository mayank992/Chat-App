{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/chat/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport { ChatFeed } from \"./ChatFeed\";\nimport userLogo from \"../../user.png\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chat(_ref) {\n  _s();\n\n  let {\n    type,\n    userId,\n    channelId\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {}, [user, channel]);\n\n  function handleMessage() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"chat__icon\",\n        src: userLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFeed, {\n      messages: user.messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"chat__footer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat__message-input\",\n          placeholder: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat__send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/chat/Chat.tsx"],"names":["ChatFeed","userLogo","useEffect","Chat","type","userId","channelId","messages","setMessages","useState","user","channel","handleMessage","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,SAAT,QAA0B,OAA1B;;AAOA,OAAO,SAASC,IAAT,OAAkD;AAAA;;AAAA,MAApC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAAoC;AACvD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AAEAP,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACQ,IAAD,EAAOC,OAAP,CAAX,CAAT;;AAEA,WAASC,aAAT,GAAyB,CAAE;;AAE3B,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIS,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,IAAI,CAACH;AAAzB;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEK,aAAhB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,qBAAjB;AAAuC,UAAA,WAAW,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAxBeT,I;;KAAAA,I","sourcesContent":["import { ChatFeed } from \"./ChatFeed\";\nimport userLogo from \"../../user.png\";\nimport { MESSAGE_TYPE } from \"../../constants/index\";\nimport { useEffect } from \"react\";\n\ntype Props = {\n  type: MESSAGE_TYPE;\n  user: UserType;\n};\n\nexport function Chat({ type, userId, channelId }: Props) {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {}, [user, channel]);\n\n  function handleMessage() {}\n\n  return (\n    <div className=\"chat\">\n      <header className=\"chat__header\">\n        <img className=\"chat__icon\" src={userLogo} />\n        <p>{user.name}</p>\n      </header>\n      <ChatFeed messages={user.messages} />\n      <footer className=\"chat__footer\">\n        <form onSubmit={handleMessage}>\n          <input className=\"chat__message-input\" placeholder=\"Message\"></input>\n          <button type=\"submit\" className=\"chat__send-btn\">\n            Send\n          </button>\n        </form>\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}