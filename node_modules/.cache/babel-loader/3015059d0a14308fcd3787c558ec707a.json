{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/List.tsx\",\n    _s = $RefreshSig$();\n\nimport { ListItem } from \"./ListItem\";\nimport { useCollapse } from \"../../hooks/useCollapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function List(_ref) {\n  _s();\n\n  let {\n    title,\n    item,\n    selectedUserId,\n    onUserChange\n  } = _ref;\n  const {\n    open,\n    toggle\n  } = useCollapse(false);\n  return /*#__PURE__*/_jsxDEV(\"dl\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n      className: \"list__title\",\n      onClick: () => toggle(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow\" + (open ? \" arrow--down\" : \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), open && items.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n      user: user,\n      selectedUserId: selectedUserId,\n      onUserChange: onUserChange\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"0ED2r0UPumOA4YRSG/YiqN3f+rM=\", false, function () {\n  return [useCollapse];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/List.tsx"],"names":["ListItem","useCollapse","List","title","item","selectedUserId","onUserChange","open","toggle","items","map","user","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAUA,OAAO,SAASC,IAAT,OAAoE;AAAA;;AAAA,MAAtD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA;AAA/B,GAAsD;AACzE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBP,WAAW,CAAC,KAAD,CAApC;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE,MAAMO,MAAM,EAAjD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE,WAAWD,IAAI,GAAG,cAAH,GAAoB,EAAnC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGJ,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGI,IAAI,IACHE,KAAK,CAACC,GAAN,CAAWN,IAAD,iBACR,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEO,IAFR;AAGE,MAAA,cAAc,EAAEN,cAHlB;AAIE,MAAA,YAAY,EAAEC;AAJhB,OACOK,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApBeV,I;UACWD,W;;;KADXC,I","sourcesContent":["import { ListItem } from \"./ListItem\";\nimport { useCollapse } from \"../../hooks/useCollapse\";\nimport { UserType } from \"../main/types\";\n\ntype Props = {\n  title: string;\n  users: UserType[];\n  selectedUserId: string;\n  onUserChange: any;\n};\n\nexport function List({ title, item, selectedUserId, onUserChange }: Props) {\n  const { open, toggle } = useCollapse(false);\n\n  return (\n    <dl className=\"list\">\n      <dt className=\"list__title\" onClick={() => toggle()}>\n        <div className={\"arrow\" + (open ? \" arrow--down\" : \"\")}></div>\n        {title}\n      </dt>\n      {open &&\n        items.map((item) => (\n          <ListItem\n            key={user.id}\n            user={user}\n            selectedUserId={selectedUserId}\n            onUserChange={onUserChange}\n          />\n        ))}\n    </dl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}