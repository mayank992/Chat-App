{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/chat/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { ChatFeed } from \"./ChatFeed\";\nimport userLogo from \"../../user.png\";\nimport { MESSAGE_TYPE } from \"../../constants/index\";\nimport { sendMessageAPI } from \"../../helpers/index\";\nimport { ChannelMembers } from \"./ChannelMembers\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chat(_ref) {\n  _s();\n\n  let {\n    chatType,\n    id,\n    name\n  } = _ref;\n  const user = useContext(UserContext);\n  const [message, setMessage] = useState(\"\");\n\n  async function handleMessageSubmit(e) {\n    e.preventDefault();\n    await sendMessageAPI({\n      type: chatType,\n      from: user.name,\n      to: name,\n      fromId: user.id,\n      toId: id,\n      text: message\n    });\n    setMessage(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"chat__icon\",\n        src: userLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), chatType === MESSAGE_TYPE.CHANNEL && /*#__PURE__*/_jsxDEV(ChannelMembers, {\n        channelId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFeed, {\n      chatType: chatType,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"chat__footer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMessageSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat__message-input\",\n          placeholder: \"Message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat__send-btn\",\n          disabled: message === \"\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"LkvlyVyKlQZBsyoN4TlXIK9rCVQ=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/chat/Chat.tsx"],"names":["React","useState","useContext","ChatFeed","userLogo","MESSAGE_TYPE","sendMessageAPI","ChannelMembers","UserContext","Chat","chatType","id","name","user","message","setMessage","handleMessageSubmit","e","preventDefault","type","from","to","fromId","toId","text","CHANNEL","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAAsBC,cAAtB,QAA4C,qBAA5C;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AASA,OAAO,SAASC,IAAT,OAA6C;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,EAAZ;AAAgBC,IAAAA;AAAhB,GAA+B;AAClD,QAAMC,IAAI,GAAGX,UAAU,CAACM,WAAD,CAAvB;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAS,EAAT,CAAtC;;AAEA,iBAAee,mBAAf,CAAmCC,CAAnC,EAAwE;AACtEA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMZ,cAAc,CAAC;AACnBa,MAAAA,IAAI,EAAET,QADa;AAEnBU,MAAAA,IAAI,EAAEP,IAAI,CAACD,IAFQ;AAGnBS,MAAAA,EAAE,EAAET,IAHe;AAInBU,MAAAA,MAAM,EAAET,IAAI,CAACF,EAJM;AAKnBY,MAAAA,IAAI,EAAEZ,EALa;AAMnBa,MAAAA,IAAI,EAAEV;AANa,KAAD,CAApB;AASAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIQ;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGF,QAAQ,KAAKL,YAAY,CAACoB,OAA1B,iBAAqC,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEd;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAED,QAApB;AAA8B,MAAA,EAAE,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEK,mBAAhB;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,UAAA,WAAW,EAAC,SAFd;AAGE,UAAA,KAAK,EAAEF,OAHT;AAIE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACS,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,gBAFZ;AAGE,UAAA,QAAQ,EAAEb,OAAO,KAAK,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA9CeL,I;;KAAAA,I","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { ChatFeed } from \"./ChatFeed\";\nimport userLogo from \"../../user.png\";\nimport { MESSAGE_TYPE } from \"../../constants/index\";\nimport { getMessages, sendMessageAPI } from \"../../helpers/index\";\nimport { MessageType } from \"../../types\";\nimport { ChannelMembers } from \"./ChannelMembers\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { usePolling } from \"../../hooks/usePolling\";\n\ntype Props = {\n  chatType: MESSAGE_TYPE;\n  id: string;\n  name: string;\n};\n\nexport function Chat({ chatType, id, name }: Props) {\n  const user = useContext(UserContext);\n  const [message, setMessage] = useState<string>(\"\");\n\n  async function handleMessageSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    await sendMessageAPI({\n      type: chatType,\n      from: user.name,\n      to: name,\n      fromId: user.id,\n      toId: id,\n      text: message,\n    });\n\n    setMessage(\"\");\n  }\n\n  return (\n    <div className=\"chat\">\n      <header className=\"chat__header\">\n        <img className=\"chat__icon\" src={userLogo} />\n        <p>{name}</p>\n        {chatType === MESSAGE_TYPE.CHANNEL && <ChannelMembers channelId={id} />}\n      </header>\n      <ChatFeed chatType={chatType} id={id} />\n      <footer className=\"chat__footer\">\n        <form onSubmit={handleMessageSubmit}>\n          <input\n            className=\"chat__message-input\"\n            placeholder=\"Message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button\n            type=\"submit\"\n            className=\"chat__send-btn\"\n            disabled={message === \"\"}\n          >\n            Send\n          </button>\n        </form>\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}