{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/Sidebar.tsx\";\nimport { ListItem, ListItemIcon, ListItemText, ListItemBadge, CollapsibleList } from \"../collapsibleList/index\";\nimport userIcon from \"../../user.png\";\nimport channelIcon from \"../../hashtag.png\";\nimport { MESSAGE_TYPE } from \"../../constants\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Sidebar(_ref) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  let {\n    users,\n    channels\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"sidebar__header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sprinklr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollapsibleList, {\n      title: \"Channels\",\n      children: _s(channels.map(_s(channel => {\n        _s();\n\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          selected: channel.id === \"2\",\n          onClick: useCallback(e => {\n            e.stopPropagation();\n            changeSelected({\n              type: MESSAGE_TYPE.CHANNEL,\n              id: channel.id\n            });\n          }, []),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            src: channelIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            text: channel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), channel.unreadCount > 0 && /*#__PURE__*/_jsxDEV(ListItemBadge, {\n            text: channel.unreadCount.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, channel.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      }, \"epj4qY15NHsef74wNqHIp5fdZmg=\")), \"epj4qY15NHsef74wNqHIp5fdZmg=\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollapsibleList, {\n      title: \"Direct messages\",\n      children: _s2(users.map(_s2(user => {\n        _s2();\n\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          selected: user.id === \"2\",\n          onClick: useCallback(e => {\n            e.stopPropagation();\n            changeSelected({\n              type: MESSAGE_TYPE.DM,\n              id: user.id\n            });\n          }, []),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            src: userIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            text: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), user.unreadCount > 0 && /*#__PURE__*/_jsxDEV(ListItemBadge, {\n            text: user.unreadCount.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n      }, \"epj4qY15NHsef74wNqHIp5fdZmg=\")), \"epj4qY15NHsef74wNqHIp5fdZmg=\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/Sidebar.tsx"],"names":["ListItem","ListItemIcon","ListItemText","ListItemBadge","CollapsibleList","userIcon","channelIcon","MESSAGE_TYPE","useCallback","Sidebar","users","channels","map","channel","id","e","stopPropagation","changeSelected","type","CHANNEL","name","unreadCount","toString","user","DM"],"mappings":";AAAA,SACEA,QADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,eALF,QAMO,0BANP;AAQA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAWA,OAAO,SAASC,OAAT,OAA6C;AAAA;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA4B;AAClD,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,UAAvB;AAAA,mBACGA,QAAQ,CAACC,GAAT,IAAcC,OAAD;AAAA;;AAAA,4BACZ,QAAC,QAAD;AAEE,UAAA,QAAQ,EAAEA,OAAO,CAACC,EAAR,KAAe,GAF3B;AAGE,UAAA,OAAO,EAAEN,WAAW,CAAEO,CAAD,IAAO;AAC1BA,YAAAA,CAAC,CAACC,eAAF;AACAC,YAAAA,cAAc,CAAC;AAAEC,cAAAA,IAAI,EAAEX,YAAY,CAACY,OAArB;AAA8BL,cAAAA,EAAE,EAAED,OAAO,CAACC;AAA1C,aAAD,CAAd;AACD,WAHmB,EAGjB,EAHiB,CAHtB;AAAA,kCAQE,QAAC,YAAD;AAAc,YAAA,GAAG,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAEO,OAAO,CAACO;AAA5B;AAAA;AAAA;AAAA;AAAA,kBATF,EAUGP,OAAO,CAACQ,WAAR,GAAsB,CAAtB,iBACC,QAAC,aAAD;AAAe,YAAA,IAAI,EAAER,OAAO,CAACQ,WAAR,CAAoBC,QAApB;AAArB;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA,WACOT,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,gBADY;AAAA,OAAb,kCADH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAsBE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,iBAAvB;AAAA,oBACGJ,KAAK,CAACE,GAAN,KAAWW,IAAD;AAAA;;AAAA,4BACT,QAAC,QAAD;AAEE,UAAA,QAAQ,EAAEA,IAAI,CAACT,EAAL,KAAY,GAFxB;AAGE,UAAA,OAAO,EAAEN,WAAW,CAAEO,CAAD,IAAO;AAC1BA,YAAAA,CAAC,CAACC,eAAF;AACAC,YAAAA,cAAc,CAAC;AAAEC,cAAAA,IAAI,EAAEX,YAAY,CAACiB,EAArB;AAAyBV,cAAAA,EAAE,EAAES,IAAI,CAACT;AAAlC,aAAD,CAAd;AACD,WAHmB,EAGjB,EAHiB,CAHtB;AAAA,kCAQE,QAAC,YAAD;AAAc,YAAA,GAAG,EAAET;AAAnB;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAEkB,IAAI,CAACH;AAAzB;AAAA;AAAA;AAAA;AAAA,kBATF,EAUGG,IAAI,CAACF,WAAL,GAAmB,CAAnB,iBACC,QAAC,aAAD;AAAe,YAAA,IAAI,EAAEE,IAAI,CAACF,WAAL,CAAiBC,QAAjB;AAArB;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA,WACOC,IAAI,CAACT,EADZ;AAAA;AAAA;AAAA;AAAA,gBADS;AAAA,OAAV,kCADH;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;KA5CeL,O","sourcesContent":["import {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemBadge,\n  CollapsibleList,\n} from \"../collapsibleList/index\";\nimport { KnownChannelType, KnownUserType } from \"../../types\";\nimport userIcon from \"../../user.png\";\nimport channelIcon from \"../../hashtag.png\";\nimport { MESSAGE_TYPE } from \"../../constants\";\nimport { useCallback } from \"react\";\n\ntype Selected = { type: MESSAGE_TYPE; id: string };\n\ntype Props = {\n  users: KnownUserType[];\n  channels: KnownChannelType[];\n  selected: Selected;\n  changeSelected: (toSelect: Selected) => void;\n};\n\nexport function Sidebar({ users, channels }: Props) {\n  return (\n    <div className=\"sidebar\">\n      <header className=\"sidebar__header\">\n        <h2>Sprinklr</h2>\n      </header>\n      <CollapsibleList title=\"Channels\">\n        {channels.map((channel) => (\n          <ListItem\n            key={channel.id}\n            selected={channel.id === \"2\"}\n            onClick={useCallback((e) => {\n              e.stopPropagation();\n              changeSelected({ type: MESSAGE_TYPE.CHANNEL, id: channel.id });\n            }, [])}\n          >\n            <ListItemIcon src={channelIcon} />\n            <ListItemText text={channel.name} />\n            {channel.unreadCount > 0 && (\n              <ListItemBadge text={channel.unreadCount.toString()} />\n            )}\n          </ListItem>\n        ))}\n      </CollapsibleList>\n      <CollapsibleList title=\"Direct messages\">\n        {users.map((user) => (\n          <ListItem\n            key={user.id}\n            selected={user.id === \"2\"}\n            onClick={useCallback((e) => {\n              e.stopPropagation();\n              changeSelected({ type: MESSAGE_TYPE.DM, id: user.id });\n            }, [])}\n          >\n            <ListItemIcon src={userIcon} />\n            <ListItemText text={user.name} />\n            {user.unreadCount > 0 && (\n              <ListItemBadge text={user.unreadCount.toString()} />\n            )}\n          </ListItem>\n        ))}\n      </CollapsibleList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}