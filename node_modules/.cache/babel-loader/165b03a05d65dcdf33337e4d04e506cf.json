{"ast":null,"code":"import axios from \"axios\";\nimport { knownUsers, users, knownChannels, channels, messages } from \"./fixture\";\nimport { MESSAGE_TYPE } from \"../constants/index\";\n\nasync function delay(ms) {\n  await new Promise((resolve, reject) => {\n    setTimeout(() => resolve(\"\"), ms);\n  });\n}\n\nexport async function getUsers() {\n  await delay(1000);\n  return users;\n}\nexport async function getKnownUsers() {\n  await delay(1000);\n  return knownUsers;\n}\nexport async function getChannels() {\n  await delay(1000);\n  return channels;\n}\nexport async function getKnownChannels() {\n  await delay(1000);\n  return knownChannels;\n}\nexport async function getMessages(type, id) {\n  await delay(1000);\n  return messages;\n}\nexport async function getMembers(channelId) {\n  await delay(1000);\n  return knownUsers;\n}\nexport async function sendMessageAPI(message) {\n  let url = message.type === MESSAGE_TYPE.DM ? `/users/${message.toId}/dms` : `/channels/${message.toId}/messages`;\n  const res = await axios.post(url, {\n    from: message.from,\n    fromId: message.fromId,\n    to: message.to,\n    toId: message.toId,\n    text: message.text\n  });\n}\nexport async function loginAPI(_ref) {\n  let {\n    username,\n    firstname,\n    lastname\n  } = _ref;\n  const res = await axios.post(\"/login\", {\n    username,\n    firstname,\n    lastname\n  });\n  return res.data;\n}","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/helpers/index.ts"],"names":["axios","knownUsers","users","knownChannels","channels","messages","MESSAGE_TYPE","delay","ms","Promise","resolve","reject","setTimeout","getUsers","getKnownUsers","getChannels","getKnownChannels","getMessages","type","id","getMembers","channelId","sendMessageAPI","message","url","DM","toId","res","post","from","fromId","to","text","loginAPI","username","firstname","lastname","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,aAHF,EAIEC,QAJF,EAKEC,QALF,QAMO,WANP;AAOA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,eAAeC,KAAf,CAAqBC,EAArB,EAAiC;AAC/B,QAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrCC,IAAAA,UAAU,CAAC,MAAMF,OAAO,CAAC,EAAD,CAAd,EAAoBF,EAApB,CAAV;AACD,GAFK,CAAN;AAGD;;AAED,OAAO,eAAeK,QAAf,GAA0B;AAC/B,QAAMN,KAAK,CAAC,IAAD,CAAX;AACA,SAAOL,KAAP;AACD;AAED,OAAO,eAAeY,aAAf,GAA+B;AACpC,QAAMP,KAAK,CAAC,IAAD,CAAX;AACA,SAAON,UAAP;AACD;AAED,OAAO,eAAec,WAAf,GAA6B;AAClC,QAAMR,KAAK,CAAC,IAAD,CAAX;AACA,SAAOH,QAAP;AACD;AAED,OAAO,eAAeY,gBAAf,GAAkC;AACvC,QAAMT,KAAK,CAAC,IAAD,CAAX;AACA,SAAOJ,aAAP;AACD;AAED,OAAO,eAAec,WAAf,CAA2BC,IAA3B,EAA+CC,EAA/C,EAA2D;AAChE,QAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,SAAOF,QAAP;AACD;AAED,OAAO,eAAee,UAAf,CAA0BC,SAA1B,EAA6C;AAClD,QAAMd,KAAK,CAAC,IAAD,CAAX;AACA,SAAON,UAAP;AACD;AAED,OAAO,eAAeqB,cAAf,CAA8BC,OAA9B,EAOJ;AACD,MAAIC,GAAG,GACLD,OAAO,CAACL,IAAR,KAAiBZ,YAAY,CAACmB,EAA9B,GACK,UAASF,OAAO,CAACG,IAAK,MAD3B,GAEK,aAAYH,OAAO,CAACG,IAAK,WAHhC;AAKA,QAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAWJ,GAAX,EAAgB;AAChCK,IAAAA,IAAI,EAAEN,OAAO,CAACM,IADkB;AAEhCC,IAAAA,MAAM,EAAEP,OAAO,CAACO,MAFgB;AAGhCC,IAAAA,EAAE,EAAER,OAAO,CAACQ,EAHoB;AAIhCL,IAAAA,IAAI,EAAEH,OAAO,CAACG,IAJkB;AAKhCM,IAAAA,IAAI,EAAET,OAAO,CAACS;AALkB,GAAhB,CAAlB;AAOD;AAED,OAAO,eAAeC,QAAf,OAQJ;AAAA,MAR4B;AAC7BC,IAAAA,QAD6B;AAE7BC,IAAAA,SAF6B;AAG7BC,IAAAA;AAH6B,GAQ5B;AACD,QAAMT,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAW,QAAX,EAAqB;AACrCM,IAAAA,QADqC;AAErCC,IAAAA,SAFqC;AAGrCC,IAAAA;AAHqC,GAArB,CAAlB;AAMA,SAAOT,GAAG,CAACU,IAAX;AACD","sourcesContent":["import axios from \"axios\";\nimport {\n  knownUsers,\n  users,\n  knownChannels,\n  channels,\n  messages,\n} from \"./fixture\";\nimport { MESSAGE_TYPE } from \"../constants/index\";\n\nasync function delay(ms: number) {\n  await new Promise((resolve, reject) => {\n    setTimeout(() => resolve(\"\"), ms);\n  });\n}\n\nexport async function getUsers() {\n  await delay(1000);\n  return users;\n}\n\nexport async function getKnownUsers() {\n  await delay(1000);\n  return knownUsers;\n}\n\nexport async function getChannels() {\n  await delay(1000);\n  return channels;\n}\n\nexport async function getKnownChannels() {\n  await delay(1000);\n  return knownChannels;\n}\n\nexport async function getMessages(type: MESSAGE_TYPE, id: string) {\n  await delay(1000);\n  return messages;\n}\n\nexport async function getMembers(channelId: string) {\n  await delay(1000);\n  return knownUsers;\n}\n\nexport async function sendMessageAPI(message: {\n  type: MESSAGE_TYPE;\n  from: string;\n  fromId: string;\n  to: string;\n  toId: string;\n  text: string;\n}) {\n  let url =\n    message.type === MESSAGE_TYPE.DM\n      ? `/users/${message.toId}/dms`\n      : `/channels/${message.toId}/messages`;\n\n  const res = await axios.post(url, {\n    from: message.from,\n    fromId: message.fromId,\n    to: message.to,\n    toId: message.toId,\n    text: message.text,\n  });\n}\n\nexport async function loginAPI({\n  username,\n  firstname,\n  lastname,\n}: {\n  username: string;\n  firstname: string;\n  lastname: string;\n}) {\n  const res = await axios.post(\"/login\", {\n    username,\n    firstname,\n    lastname,\n  });\n\n  return res.data;\n}\n"]},"metadata":{},"sourceType":"module"}