{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/Sidebar.tsx\";\nimport { ListItem, ListItemIcon, ListItemText, ListItemBadge, CollapsibleList } from \"../collapsibleList/index\";\nimport userIcon from \"../../user.png\";\nimport channelIcon from \"../../hashtag.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Sidebar(_ref) {\n  let {\n    users,\n    channels\n  } = _ref;\n\n  function handleChannelChange(e) {\n    e.stopPropagation(); // onChannelChange();\n  }\n\n  function handleUserChange(e) {\n    e.stopPropagation(); // onUserChange();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"sidebar__header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollapsibleList, {\n      title: \"Channels\",\n      children: channels.map(channel => /*#__PURE__*/_jsxDEV(ListItem, {\n        selected: channel.id === \"2\",\n        onClick: handleChannelChange,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          src: channelIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          text: channel.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), channel.unreadCount > 0 && /*#__PURE__*/_jsxDEV(ListItemBadge, {\n          text: channel.unreadCount.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollapsibleList, {\n      title: \"Direct messages\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n        selected: user.id === \"1\",\n        onClick: handleUserChange,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          src: userIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          text: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), user.unreadCount > 0 && /*#__PURE__*/_jsxDEV(ListItemBadge, {\n          text: user.unreadCount.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/Sidebar.tsx"],"names":["ListItem","ListItemIcon","ListItemText","ListItemBadge","CollapsibleList","userIcon","channelIcon","Sidebar","users","channels","handleChannelChange","e","stopPropagation","handleUserChange","map","channel","id","name","unreadCount","toString","user"],"mappings":";AAAA,SACEA,QADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,eALF,QAMO,0BANP;AAQA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAOA,OAAO,SAASC,OAAT,OAA6C;AAAA,MAA5B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA4B;;AAClD,WAASC,mBAAT,CAA6BC,CAA7B,EAA+D;AAC7DA,IAAAA,CAAC,CAACC,eAAF,GAD6D,CAE7D;AACD;;AAED,WAASC,gBAAT,CAA0BF,CAA1B,EAA4D;AAC1DA,IAAAA,CAAC,CAACC,eAAF,GAD0D,CAE1D;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,UAAvB;AAAA,gBACGH,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACZ,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,OAAO,CAACC,EAAR,KAAe,GAAnC;AAAwC,QAAA,OAAO,EAAEN,mBAAjD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,GAAG,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAES,OAAO,CAACE;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGF,OAAO,CAACG,WAAR,GAAsB,CAAtB,iBACC,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEH,OAAO,CAACG,WAAR,CAAoBC,QAApB;AAArB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,iBAAvB;AAAA,gBACGX,KAAK,CAACM,GAAN,CAAWM,IAAD,iBACT,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,IAAI,CAACJ,EAAL,KAAY,GAAhC;AAAqC,QAAA,OAAO,EAAEH,gBAA9C;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,GAAG,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEe,IAAI,CAACH;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGG,IAAI,CAACF,WAAL,GAAmB,CAAnB,iBACC,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEE,IAAI,CAACF,WAAL,CAAiBC,QAAjB;AAArB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;KAtCeZ,O","sourcesContent":["import {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemBadge,\n  CollapsibleList,\n} from \"../collapsibleList/index\";\nimport { KnownChannelType, KnownUserType } from \"../../types\";\nimport userIcon from \"../../user.png\";\nimport channelIcon from \"../../hashtag.png\";\n\ntype Props = {\n  users: KnownUserType[];\n  channels: KnownChannelType[];\n};\n\nexport function Sidebar({ users, channels }: Props) {\n  function handleChannelChange(e: React.MouseEvent<HTMLElement>) {\n    e.stopPropagation();\n    // onChannelChange();\n  }\n\n  function handleUserChange(e: React.MouseEvent<HTMLElement>) {\n    e.stopPropagation();\n    // onUserChange();\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <header className=\"sidebar__header\"></header>\n      <CollapsibleList title=\"Channels\">\n        {channels.map((channel) => (\n          <ListItem selected={channel.id === \"2\"} onClick={handleChannelChange}>\n            <ListItemIcon src={channelIcon} />\n            <ListItemText text={channel.name} />\n            {channel.unreadCount > 0 && (\n              <ListItemBadge text={channel.unreadCount.toString()} />\n            )}\n          </ListItem>\n        ))}\n      </CollapsibleList>\n      <CollapsibleList title=\"Direct messages\">\n        {users.map((user) => (\n          <ListItem selected={user.id === \"1\"} onClick={handleUserChange}>\n            <ListItemIcon src={userIcon} />\n            <ListItemText text={user.name} />\n            {user.unreadCount > 0 && (\n              <ListItemBadge text={user.unreadCount.toString()} />\n            )}\n          </ListItem>\n        ))}\n      </CollapsibleList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}