{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/ListItem.tsx\";\nimport userIcon from \"../../user.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ListItem(_ref) {\n  let {\n    user,\n    selectedUserId,\n    onUserChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"dd\", {\n    className: \"list-item\" + (user.id === selectedUserId ? \" list-item--selected\" : \"\"),\n    onClick: () => onUserChange(user.id),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: userIcon,\n      className: \"list-item__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"list-item__username\",\n      children: user.fullname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), user.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-item__unread\",\n      children: user.unreadCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/chat-app/src/components/sidebar/ListItem.tsx"],"names":["userIcon","ListItem","user","selectedUserId","onUserChange","id","fullname","unreadCount"],"mappings":";AACA,OAAOA,QAAP,MAAqB,gBAArB;;AAQA,OAAO,SAASC,QAAT,OAAiE;AAAA,MAA/C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,cAAR;AAAwBC,IAAAA;AAAxB,GAA+C;AACtE,sBACE;AACE,IAAA,SAAS,EACP,eAAeF,IAAI,CAACG,EAAL,KAAYF,cAAZ,GAA6B,sBAA7B,GAAsD,EAArE,CAFJ;AAIE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACF,IAAI,CAACG,EAAN,CAJ7B;AAAA,4BAME;AAAK,MAAA,GAAG,EAAEL,QAAV;AAAoB,MAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCE,IAAI,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,YAPF,EAQGJ,IAAI,CAACK,WAAL,GAAmB,CAAnB,iBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCL,IAAI,CAACK;AAAzC;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;KAfeN,Q","sourcesContent":["import { UserType } from \"../main/types\";\nimport userIcon from \"../../user.png\";\n\ntype Props = {\n  user: UserType;\n  selectedUserId: string;\n  onUserChange: any;\n};\n\nexport function ListItem({ user, selectedUserId, onUserChange }: Props) {\n  return (\n    <dd\n      className={\n        \"list-item\" + (user.id === selectedUserId ? \" list-item--selected\" : \"\")\n      }\n      onClick={() => onUserChange(user.id)}\n    >\n      <img src={userIcon} className=\"list-item__img\" />\n      <p className=\"list-item__username\">{user.fullname}</p>\n      {user.unreadCount > 0 && (\n        <div className=\"list-item__unread\">{user.unreadCount}</div>\n      )}\n    </dd>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}