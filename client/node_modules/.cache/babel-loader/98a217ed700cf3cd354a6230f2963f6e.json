{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { CHAT_TYPE } from \"../../constants\";\nimport { CreateChannel } from \"./CreateChannel\";\nimport { AddUserDm } from \"./AddUserDm\";\nimport { List, ListItem } from \"../common/list/index\";\nimport { Collapsible } from \"../common/collapsible/index\";\nimport { Icon } from \"../common/icons/index\";\nimport { Modal, ModalOpenButton, ModalContents } from \"../common/modal\";\nimport hashIcon from \"../../assets/hashtag.png\";\nimport userIcon from \"../../assets/user.png\";\nimport \"./Sidebar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Sidebar(_ref) {\n  _s();\n\n  let {\n    users,\n    channels,\n    selected,\n    changeSelected\n  } = _ref;\n  const [user] = useContext(UserContext);\n  const handleDirectMessageSelect = useCallback(connectionId => {\n    changeSelected({\n      type: CHAT_TYPE.DM,\n      id: connectionId\n    });\n  }, []);\n  const handleChannelSelect = useCallback(channelId => {\n    changeSelected({\n      type: CHAT_TYPE.CHANNEL,\n      id: channelId\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"sidebar__header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      defaultIsOpen: true,\n      children: [/*#__PURE__*/_jsxDEV(Collapsible.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"list-item__text\",\n          children: \"Channels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          children: [/*#__PURE__*/_jsxDEV(ModalOpenButton, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalContents, {\n            title: \"Create channel\",\n            children: /*#__PURE__*/_jsxDEV(CreateChannel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapsible.Content, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: channels.map(channel => /*#__PURE__*/_jsxDEV(ListItem, {\n            isActive: selected.id === channel.id,\n            onClick: () => handleChannelSelect(channel.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: hashIcon,\n              alt: \"channel-icon\",\n              style: {\n                maxHeight: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-item__text\",\n              children: channel.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, channel.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      defaultIsOpen: true,\n      children: [/*#__PURE__*/_jsxDEV(Collapsible.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"list-item__text\",\n          children: \"Direct messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          children: [/*#__PURE__*/_jsxDEV(ModalOpenButton, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalContents, {\n            title: \"Add user\",\n            children: /*#__PURE__*/_jsxDEV(AddUserDm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapsible.Content, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n            isActive: selected.id === user.id,\n            onClick: () => handleDirectMessageSelect(user.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: userIcon,\n              alt: \"channel-icon\",\n              style: {\n                maxHeight: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-item__text\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"eBl+hgMCupMGX1L+S9u12P/mKTk=\");\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/index.tsx"],"names":["useCallback","CHAT_TYPE","CreateChannel","AddUserDm","List","ListItem","Collapsible","Icon","Modal","ModalOpenButton","ModalContents","hashIcon","userIcon","Sidebar","users","channels","selected","changeSelected","user","useContext","UserContext","handleDirectMessageSelect","connectionId","type","DM","id","handleChannelSelect","channelId","CHANNEL","username","map","channel","maxHeight","name"],"mappings":"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","sourcesContent":["import { useCallback } from \"react\";\nimport { useUserContext } from \"../../contexts/UserContext\";\nimport { JoinedChannelType, ConnectionType, Selected } from \"../../types\";\nimport { CHAT_TYPE } from \"../../constants\";\nimport { CreateChannel } from \"./CreateChannel\";\nimport { AddUserDm } from \"./AddUserDm\";\nimport { List, ListItem } from \"../common/list/index\";\nimport { Collapsible } from \"../common/collapsible/index\";\nimport { Icon } from \"../common/icons/index\";\nimport { Modal, ModalOpenButton, ModalContents } from \"../common/modal\";\nimport hashIcon from \"../../assets/hashtag.png\";\nimport userIcon from \"../../assets/user.png\";\nimport \"./Sidebar.css\";\n\ntype Props = {\n  users: ConnectionType[];\n  channels: JoinedChannelType[];\n  selected: Selected;\n  changeSelected: (toSelect: Selected) => void;\n};\n\nexport function Sidebar({ users, channels, selected, changeSelected }: Props) {\n  const [user] = useContext(UserContext);\n\n  const handleDirectMessageSelect = useCallback((connectionId: string) => {\n    changeSelected({ type: CHAT_TYPE.DM, id: connectionId });\n  }, []);\n\n  const handleChannelSelect = useCallback((channelId: string) => {\n    changeSelected({ type: CHAT_TYPE.CHANNEL, id: channelId });\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <header className=\"sidebar__header\">\n        <h2>{user.username}</h2>\n      </header>\n      <Collapsible defaultIsOpen={true}>\n        <Collapsible.Header>\n          <p className=\"list-item__text\">Channels</p>\n          <Modal>\n            <ModalOpenButton>\n              <Icon>+</Icon>\n            </ModalOpenButton>\n            <ModalContents title=\"Create channel\">\n              <CreateChannel />\n            </ModalContents>\n          </Modal>\n        </Collapsible.Header>\n        <Collapsible.Content>\n          <List>\n            {channels.map((channel) => (\n              <ListItem\n                key={channel.id}\n                isActive={selected.id === channel.id}\n                onClick={() => handleChannelSelect(channel.id)}\n              >\n                <img\n                  src={hashIcon}\n                  alt=\"channel-icon\"\n                  style={{ maxHeight: \"100%\" }}\n                />\n                <p className=\"list-item__text\">{channel.name}</p>\n              </ListItem>\n            ))}\n          </List>\n        </Collapsible.Content>\n      </Collapsible>\n      <Collapsible defaultIsOpen={true}>\n        <Collapsible.Header>\n          <p className=\"list-item__text\">Direct messages</p>\n          <Modal>\n            <ModalOpenButton>\n              <Icon>+</Icon>\n            </ModalOpenButton>\n            <ModalContents title=\"Add user\">\n              <AddUserDm />\n            </ModalContents>\n          </Modal>\n        </Collapsible.Header>\n        <Collapsible.Content>\n          <List>\n            {users.map((user) => (\n              <ListItem\n                key={user.id}\n                isActive={selected.id === user.id}\n                onClick={() => handleDirectMessageSelect(user.id)}\n              >\n                <img\n                  src={userIcon}\n                  alt=\"channel-icon\"\n                  style={{ maxHeight: \"100%\" }}\n                />\n                <p className=\"list-item__text\">{user.name}</p>\n              </ListItem>\n            ))}\n          </List>\n        </Collapsible.Content>\n      </Collapsible>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}