{"ast":null,"code":"import axios from \"axios\";\nimport { client } from \"../utils/apiClient\";\nimport { CHAT_TYPE } from \"../constants/index\";\nimport { HttpMethods } from \"../types/requestTypes\";\nexport function login(_ref) {\n  let {\n    username,\n    firstname,\n    lastname\n  } = _ref;\n  return client(\"/users/login\", {\n    method: HttpMethods.POST,\n    data: {\n      username,\n      fullname: `${firstname} ${lastname}`\n    }\n  });\n}\nexport function getUserDetails(userId, options) {\n  return client(\"/users/alldetails\", {\n    headers: {\n      userid: userId\n    },\n    ...options\n  });\n}\nexport function getLatestMessages(userId, type, id, options) {\n  const url = type === CHAT_TYPE.DM ? `/connections/${id}/messages?limit=15` : `/channels/${id}/messages?limit=15`;\n  return client(url, {\n    headers: {\n      userid: userId\n    },\n    ...options\n  });\n}\nexport function getChannelMembers(channelId, options) {\n  return client(`/channels/${channelId}/members`, { ...options\n  });\n}\nexport function addUserToChannel(userId, channelId, username) {\n  return client(`/channels/${channelId}/members`, {\n    data: {\n      username\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId\n    }\n  });\n}\nexport async function sendMessage(message) {\n  let url = message.type === CHAT_TYPE.DM ? `/users/${message.toId}/messages` : `/channels/${message.toId}/messages`;\n  const res = await axios.post(url, {\n    from: message.from,\n    to: message.to,\n    message: message.message\n  }, {\n    headers: {\n      userid: message.fromId\n    }\n  });\n  return;\n}\nexport function createChannel(userId, channelName) {\n  return client(\"/channels\", {\n    data: {\n      channelName\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId\n    }\n  });\n}\nexport async function addUser(userId, username) {\n  return client(\"/connections\", {\n    data: {\n      username\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId\n    }\n  });\n}","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/helpers/index.ts"],"names":["axios","client","CHAT_TYPE","HttpMethods","login","username","firstname","lastname","method","POST","data","fullname","getUserDetails","userId","options","headers","userid","getLatestMessages","type","id","url","DM","getChannelMembers","channelId","addUserToChannel","sendMessage","message","toId","res","post","from","to","fromId","createChannel","channelName","addUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { client } from \"../utils/apiClient\";\nimport { CHAT_TYPE } from \"../constants/index\";\nimport { HttpMethods } from \"../types/requestTypes\";\n\nexport function login({\n  username,\n  firstname,\n  lastname,\n}: {\n  username: string;\n  firstname: string;\n  lastname: string;\n}) {\n  return client(\"/users/login\", {\n    method: HttpMethods.POST,\n    data: {\n      username,\n      fullname: `${firstname} ${lastname}`,\n    },\n  });\n}\n\nexport function getUserDetails(userId: string, options: any) {\n  return client(\"/users/alldetails\", {\n    headers: { userid: userId },\n    ...options,\n  });\n}\n\nexport function getLatestMessages(\n  userId: string,\n  type: CHAT_TYPE,\n  id: string,\n  options: any\n) {\n  const url =\n    type === CHAT_TYPE.DM\n      ? `/connections/${id}/messages?limit=15`\n      : `/channels/${id}/messages?limit=15`;\n\n  return client(url, {\n    headers: { userid: userId },\n    ...options,\n  });\n}\n\nexport function getChannelMembers(\n  channelId: string,\n  options: { [property: string]: any }\n) {\n  return client(`/channels/${channelId}/members`, { ...options });\n}\n\nexport function addUserToChannel(\n  userId: string,\n  channelId: string,\n  username: string\n) {\n  return client(`/channels/${channelId}/members`, {\n    data: {\n      username,\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId,\n    },\n  });\n}\n\nexport async function sendMessage(message: {\n  type: CHAT_TYPE;\n  from: string;\n  to: string;\n  message: string;\n}) {\n  let url =\n    message.type === CHAT_TYPE.DM\n      ? `/users/${message.toId}/messages`\n      : `/channels/${message.toId}/messages`;\n\n  const res = await axios.post(\n    url,\n    {\n      from: message.from,\n      to: message.to,\n      message: message.message,\n    },\n    { headers: { userid: message.fromId } }\n  );\n\n  return;\n}\n\nexport function createChannel(userId: string, channelName: string) {\n  return client(\"/channels\", {\n    data: {\n      channelName,\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId,\n    },\n  });\n}\n\nexport async function addUser(userId: string, username: string) {\n  return client(\"/connections\", {\n    data: {\n      username,\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}