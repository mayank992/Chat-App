{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMutation } from \"../../../hooks/useMutation\";\nimport { sendMessageAPI } from \"../../../helpers/index\";\nimport { useUser } from \"../../../contexts/UserContext\";\nexport function useSendMessage() {\n  _s();\n\n  const [user] = useUser();\n  const {\n    isError,\n    isIdle,\n    isLoading: isSendingMessage,\n    isSuccess,\n    error,\n    data,\n    mutate: sendMessage\n  } = useMutation(sendMessageReq => sendMessageAPI(user.id, sendMessageReq));\n  return {\n    isSendingMessage,\n    sendMessage\n  };\n}\n\n_s(useSendMessage, \"e9YhMSgf25dxN5ynPos56kH7Mxg=\", false, function () {\n  return [useUser, useMutation];\n});","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/chat/hooks/useSendMessage.ts"],"names":["useMutation","sendMessageAPI","useUser","useSendMessage","user","isError","isIdle","isLoading","isSendingMessage","isSuccess","error","data","mutate","sendMessage","sendMessageReq","id"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AASA,OAAO,SAASC,cAAT,GAA0B;AAAA;;AAC/B,QAAM,CAACC,IAAD,IAASF,OAAO,EAAtB;AACA,QAAM;AACJG,IAAAA,OADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,SAAS,EAAEC,gBAHP;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,MAAM,EAAEC;AAPJ,MAQFb,WAAW,CACZc,cAAD,IAAoCb,cAAc,CAACG,IAAI,CAACW,EAAN,EAAUD,cAAV,CADrC,CARf;AAYA,SAAO;AAAEN,IAAAA,gBAAF;AAAoBK,IAAAA;AAApB,GAAP;AACD;;GAfeV,c;UACCD,O,EASXF,W","sourcesContent":["import { useMutation } from \"../../../hooks/useMutation\";\nimport { sendMessageAPI } from \"../../../helpers/index\";\nimport { useUser } from \"../../../contexts/UserContext\";\nimport { CHAT_TYPE } from \"../../../constants\";\n\ntype SendMessageReq = {\n  type: CHAT_TYPE;\n  to: string;\n  message: string;\n};\n\nexport function useSendMessage() {\n  const [user] = useUser();\n  const {\n    isError,\n    isIdle,\n    isLoading: isSendingMessage,\n    isSuccess,\n    error,\n    data,\n    mutate: sendMessage,\n  } = useMutation<any, { message: string }, SendMessageReq>(\n    (sendMessageReq: SendMessageReq) => sendMessageAPI(user.id, sendMessageReq)\n  );\n\n  return { isSendingMessage, sendMessage };\n}\n"]},"metadata":{},"sourceType":"module"}