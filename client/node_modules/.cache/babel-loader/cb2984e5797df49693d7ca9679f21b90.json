{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/CreateChannel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ButtonWithSpinner } from \"../common/button/index\";\nimport { ErrorMessage, SuccessMessage } from \"../common/Messages\";\nimport { useCreateChannel } from \"./hooks/useCreateChannel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateChannel() {\n  _s();\n\n  const [channelName, setChannelName] = useState(\"\");\n  const {\n    isLoading,\n    isError,\n    error,\n    isSuccess,\n    mutate\n  } = useCreateChannel();\n\n  function handleCreateChannel(e) {\n    e.preventDefault();\n    mutate({\n      channelName\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-channel\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleCreateChannel,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Channel name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: channelName,\n          onChange: e => setChannelName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWithSpinner, {\n        className: \"submit-btn\",\n        isLoading: isLoading,\n        type: \"submit\",\n        children: \"Create Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), isSuccess && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        message: \"Channel created successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error === null || error === void 0 ? void 0 : error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateChannel, \"v7nh82VV9xxuuyn24LrnCDKPDKQ=\", false, function () {\n  return [useCreateChannel];\n});\n\n_c = CreateChannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChannel\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/CreateChannel.tsx"],"names":["React","useState","ButtonWithSpinner","ErrorMessage","SuccessMessage","useCreateChannel","CreateChannel","channelName","setChannelName","isLoading","isError","error","isSuccess","mutate","handleCreateChannel","e","preventDefault","target","value","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,oBAA7C;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM;AAAEQ,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAmDR,gBAAgB,EAAzE;;AAEA,WAASS,mBAAT,CAA6BC,CAA7B,EAAkE;AAChEA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,MAAM,CAAC;AAAEN,MAAAA;AAAF,KAAD,CAAN;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEO,mBAAjC;AAAA,8BACE;AAAA,iDAEE;AACE,UAAA,KAAK,EAAEP,WADT;AAEE,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,cAAc,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,iBAAD;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,SAAS,EAAET,SAFb;AAGE,QAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAeGG,SAAS,iBACR,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAkBGF,OAAO,iBAAI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEQ;AAA9B;AAAA;AAAA;AAAA;AAAA,cAlBd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAjCeb,a;UAE2CD,gB;;;KAF3CC,a","sourcesContent":["import React, { useState } from \"react\";\nimport { ButtonWithSpinner } from \"../common/button/index\";\nimport { ErrorMessage, SuccessMessage } from \"../common/Messages\";\nimport { useCreateChannel } from \"./hooks/useCreateChannel\";\n\nexport function CreateChannel() {\n  const [channelName, setChannelName] = useState<string>(\"\");\n  const { isLoading, isError, error, isSuccess, mutate } = useCreateChannel();\n\n  function handleCreateChannel(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    mutate({ channelName });\n  }\n\n  return (\n    <div className=\"create-channel\">\n      <form className=\"form\" onSubmit={handleCreateChannel}>\n        <label>\n          Channel name:\n          <input\n            value={channelName}\n            onChange={(e) => setChannelName(e.target.value)}\n          />\n        </label>\n        <ButtonWithSpinner\n          className=\"submit-btn\"\n          isLoading={isLoading}\n          type=\"submit\"\n        >\n          Create Channel\n        </ButtonWithSpinner>\n        {isSuccess && (\n          <SuccessMessage message={\"Channel created successfully.\"} />\n        )}\n        {isError && <ErrorMessage message={error?.message} />}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}