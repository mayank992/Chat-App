{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/pages/login/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { client } from \"../../utils/apiClient\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { useMutation } from \"../../hooks/useMutation\";\nimport { ErrorMessage } from \"../../components/library/Messages\";\nimport { ButtonWithSpinner } from \"../../components/library/button\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormState = {\n  username: \"\",\n  firstname: \"\",\n  lastname: \"\"\n};\nexport function Login() {\n  _s();\n\n  const [, setUser] = useContext(UserContext);\n  const [formState, setFormState] = useState(initialFormState); // TODO - create seperate hook for this login mutation\n\n  const {\n    isError,\n    error,\n    mutate,\n    isLoading\n  } = useMutation(_ref => {\n    let {\n      username,\n      firstname,\n      lastname\n    } = _ref;\n    return client(\"/users/login\", null, {\n      method: \"POST\",\n      data: {\n        username,\n        name: `${firstname} ${lastname}`\n      }\n    });\n  }, {\n    onSuccess: setUser\n  });\n\n  async function submitHandler(e) {\n    e.preventDefault();\n    mutate(formState);\n  }\n\n  function changeHandler(e) {\n    setFormState(formState => ({ ...formState,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login__form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login__input\",\n          name: \"username\",\n          value: formState.username,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login__input\",\n          name: \"firstname\",\n          value: formState.firstname,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login__input\",\n          name: \"lastname\",\n          value: formState.lastname,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWithSpinner, {\n        className: \"submit-btn\",\n        isLoading: isLoading,\n        disabled: isLoading,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error === null || error === void 0 ? void 0 : error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"1tmDn/eFs3bAw1pLobSrV5aN404=\", false, function () {\n  return [useMutation];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/pages/login/index.tsx"],"names":["React","useState","useContext","client","UserContext","useMutation","ErrorMessage","ButtonWithSpinner","initialFormState","username","firstname","lastname","Login","setUser","formState","setFormState","isError","error","mutate","isLoading","method","data","name","onSuccess","submitHandler","e","preventDefault","changeHandler","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { UserType } from \"../../types\";\nimport { client } from \"../../utils/apiClient\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { useMutation } from \"../../hooks/useMutation\";\nimport { ErrorMessage } from \"../../components/library/Messages\";\nimport { ButtonWithSpinner } from \"../../components/library/button\";\nimport \"./Login.css\";\n\ntype FormState = {\n  username: string;\n  firstname: string;\n  lastname: string;\n};\n\nconst initialFormState = {\n  username: \"\",\n  firstname: \"\",\n  lastname: \"\",\n};\n\nexport function Login() {\n  const [, setUser] = useContext(UserContext);\n  const [formState, setFormState] = useState<FormState>(initialFormState);\n\n  // TODO - create seperate hook for this login mutation\n  const { isError, error, mutate, isLoading } = useMutation<\n    UserType,\n    { message: string },\n    FormState\n  >(\n    ({ username, firstname, lastname }: FormState) =>\n      client(\"/users/login\", null, {\n        method: \"POST\",\n        data: {\n          username,\n          name: `${firstname} ${lastname}`,\n        },\n      }),\n    { onSuccess: setUser }\n  );\n\n  async function submitHandler(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    mutate(formState);\n  }\n\n  function changeHandler(e: React.ChangeEvent<HTMLInputElement>) {\n    setFormState((formState: FormState) => ({\n      ...formState,\n      [e.target.name]: e.target.value,\n    }));\n  }\n\n  return (\n    <div className=\"login\">\n      <h1>Login</h1>\n      <p>Welcome to the app</p>\n      <form className=\"login__form\" onSubmit={submitHandler}>\n        <label>\n          Username\n          <input\n            className=\"login__input\"\n            name=\"username\"\n            value={formState.username}\n            onChange={changeHandler}\n          />\n        </label>\n        <label>\n          First name\n          <input\n            className=\"login__input\"\n            name=\"firstname\"\n            value={formState.firstname}\n            onChange={changeHandler}\n          />\n        </label>\n        <label>\n          Last name\n          <input\n            className=\"login__input\"\n            name=\"lastname\"\n            value={formState.lastname}\n            onChange={changeHandler}\n          />\n        </label>\n        <ButtonWithSpinner\n          className=\"submit-btn\"\n          isLoading={isLoading}\n          disabled={isLoading}\n          type=\"submit\"\n        >\n          Login\n        </ButtonWithSpinner>\n        {isError && <ErrorMessage message={error?.message} />}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}