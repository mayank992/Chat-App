{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/Sidebar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useCallback } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { CreateChannel } from \"./CreateChannel\";\nimport { CHAT_TYPE } from \"../../constants\";\nimport { Menu } from \"./Menu\";\nimport \"./Sidebar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Sidebar(_ref) {\n  _s();\n\n  let {\n    users,\n    channels,\n    selected,\n    changeSelected\n  } = _ref;\n  const [user] = useContext(UserContext);\n  const handleConnectionSelect = useCallback(connectionId => {\n    changeSelected({\n      type: CHAT_TYPE.DM,\n      id: connectionId\n    });\n  }, []);\n  const handleChannelSelect = useCallback(channelId => {\n    changeSelected({\n      type: CHAT_TYPE.CHANNEL,\n      id: channelId\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"sidebar__header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      title: \"Channels\",\n      items: channels,\n      selectedId: selected.id,\n      onChangeSelected: handleChannelSelect,\n      modalContent: /*#__PURE__*/_jsxDEV(CreateChannel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      title: \"Direct Messages\",\n      items: users,\n      selectedId: selected.id,\n      onChangeSelected: handleConnectionSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"3ZABr3u0cfuqYpqzXk68WR3FqSI=\");\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/Sidebar.tsx"],"names":["useContext","useCallback","UserContext","CreateChannel","CHAT_TYPE","Menu","Sidebar","users","channels","selected","changeSelected","user","handleConnectionSelect","connectionId","type","DM","id","handleChannelSelect","channelId","CHANNEL","username"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,eAAP;;AASA,OAAO,SAASC,OAAT,OAAuE;AAAA;;AAAA,MAAtD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAAsD;AAC5E,QAAM,CAACC,IAAD,IAASX,UAAU,CAACE,WAAD,CAAzB;AAEA,QAAMU,sBAAsB,GAAGX,WAAW,CAAEY,YAAD,IAA0B;AACnEH,IAAAA,cAAc,CAAC;AAAEI,MAAAA,IAAI,EAAEV,SAAS,CAACW,EAAlB;AAAsBC,MAAAA,EAAE,EAAEH;AAA1B,KAAD,CAAd;AACD,GAFyC,EAEvC,EAFuC,CAA1C;AAIA,QAAMI,mBAAmB,GAAGhB,WAAW,CAAEiB,SAAD,IAAuB;AAC7DR,IAAAA,cAAc,CAAC;AAAEI,MAAAA,IAAI,EAAEV,SAAS,CAACe,OAAlB;AAA2BH,MAAAA,EAAE,EAAEE;AAA/B,KAAD,CAAd;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA,6BACE;AAAA,kBAAKP,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,KAAK,EAAEZ,QAFT;AAGE,MAAA,UAAU,EAAEC,QAAQ,CAACO,EAHvB;AAIE,MAAA,gBAAgB,EAAEC,mBAJpB;AAKE,MAAA,YAAY,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALhB;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE,QAAC,IAAD;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,KAAK,EAAEV,KAFT;AAGE,MAAA,UAAU,EAAEE,QAAQ,CAACO,EAHvB;AAIE,MAAA,gBAAgB,EAAEJ;AAJpB;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA/BeN,O;;KAAAA,O","sourcesContent":["import { useContext, useCallback } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { JoinedChannelType, ConnectionType, Selected } from \"../../types\";\nimport { CreateChannel } from \"./CreateChannel\";\nimport { CHAT_TYPE } from \"../../constants\";\nimport { Menu } from \"./Menu\";\nimport \"./Sidebar.css\";\n\ntype Props = {\n  users: ConnectionType[];\n  channels: JoinedChannelType[];\n  selected: Selected;\n  changeSelected: (toSelect: Selected) => void;\n};\n\nexport function Sidebar({ users, channels, selected, changeSelected }: Props) {\n  const [user] = useContext(UserContext);\n\n  const handleConnectionSelect = useCallback((connectionId: string) => {\n    changeSelected({ type: CHAT_TYPE.DM, id: connectionId });\n  }, []);\n\n  const handleChannelSelect = useCallback((channelId: string) => {\n    changeSelected({ type: CHAT_TYPE.CHANNEL, id: channelId });\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <header className=\"sidebar__header\">\n        <h2>{user.username}</h2>\n      </header>\n      <Menu\n        title=\"Channels\"\n        items={channels}\n        selectedId={selected.id}\n        onChangeSelected={handleChannelSelect}\n        modalContent={<CreateChannel />}\n      />\n      <Menu\n        title=\"Direct Messages\"\n        items={users}\n        selectedId={selected.id}\n        onChangeSelected={handleConnectionSelect}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}