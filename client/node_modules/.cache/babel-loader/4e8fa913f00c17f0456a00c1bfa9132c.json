{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/common/modal/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext } from \"react\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext([false, () => {}]);\nexport function Modal(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: [isOpen, setIsOpen],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Modal, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Modal;\nexport function ModalOpenButton(_ref) {\n  _s2();\n\n  let {\n    children: child\n  } = _ref;\n  const [, setIsOpen] = useContext(ModalContext);\n  return /*#__PURE__*/React.cloneElement(child, {\n    onClick: e => {\n      e.stopPropagation();\n      setIsOpen(true);\n    }\n  });\n}\n\n_s2(ModalOpenButton, \"ll9WMajo265urpr44/DXPH8vPbk=\");\n\n_c2 = ModalOpenButton;\nexport function ModalDismissButton(_ref2) {\n  _s3();\n\n  let {\n    children: child\n  } = _ref2;\n  const [, setIsOpen] = useContext(ModalContext);\n  return /*#__PURE__*/React.cloneElement(child, {\n    onClick: e => {\n      e.preventDefault();\n      setIsOpen(false);\n    }\n  });\n}\n\n_s3(ModalDismissButton, \"ll9WMajo265urpr44/DXPH8vPbk=\");\n\n_c3 = ModalDismissButton;\nexport function ModalContentsBase(props) {\n  _s4();\n\n  const [isOpen] = useContext(ModalContext);\n  return isOpen && props.children;\n}\n\n_s4(ModalContentsBase, \"PETZmTlrBmbfV7nf1LHZDY0Oyz0=\");\n\n_c4 = ModalContentsBase;\nexport function ModalContents(_ref3) {\n  let {\n    children,\n    title\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(ModalContentsBase, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal-hedear\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalDismissButton, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_c5 = ModalContents;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"ModalOpenButton\");\n$RefreshReg$(_c3, \"ModalDismissButton\");\n$RefreshReg$(_c4, \"ModalContentsBase\");\n$RefreshReg$(_c5, \"ModalContents\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/common/modal/index.tsx"],"names":["React","useState","createContext","useContext","ModalContext","Modal","props","isOpen","setIsOpen","ModalOpenButton","children","child","cloneElement","onClick","e","stopPropagation","ModalDismissButton","preventDefault","ModalContentsBase","ModalContents","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D;AACA,OAAO,aAAP;;AAOA,MAAMC,YAAY,gBAAGF,aAAa,CAAmB,CAAC,KAAD,EAAQ,MAAM,CAAE,CAAhB,CAAnB,CAAlC;AAEA,OAAO,SAASG,KAAT,CAAeC,KAAf,EAA+C;AAAA;;AACpD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAU,KAAV,CAApC;AAEA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACM,MAAD,EAASC,SAAT,CAA9B;AAAA,OAAuDF;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAJeD,K;;KAAAA,K;AAUhB,OAAO,SAASI,eAAT,OAEiC;AAAA;;AAAA,MAFR;AAC9BC,IAAAA,QAAQ,EAAEC;AADoB,GAEQ;AACtC,QAAM,GAAGH,SAAH,IAAgBL,UAAU,CAACC,YAAD,CAAhC;AAEA,sBAAOJ,KAAK,CAACY,YAAN,CAAmBD,KAAnB,EAA0B;AAC/BE,IAAAA,OAAO,EAAGC,CAAD,IAAY;AACnBA,MAAAA,CAAC,CAACC,eAAF;AACAP,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AAJ8B,GAA1B,CAAP;AAMD;;IAXeC,e;;MAAAA,e;AAahB,OAAO,SAASO,kBAAT,QAEiC;AAAA;;AAAA,MAFL;AACjCN,IAAAA,QAAQ,EAAEC;AADuB,GAEK;AACtC,QAAM,GAAGH,SAAH,IAAgBL,UAAU,CAACC,YAAD,CAAhC;AAEA,sBAAOJ,KAAK,CAACY,YAAN,CAAmBD,KAAnB,EAA0B;AAC/BE,IAAAA,OAAO,EAAGC,CAAD,IAAY;AACnBA,MAAAA,CAAC,CAACG,cAAF;AACAT,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AAJ8B,GAA1B,CAAP;AAMD;;IAXeQ,kB;;MAAAA,kB;AAahB,OAAO,SAASE,iBAAT,CAA2BZ,KAA3B,EAA2D;AAAA;;AAChE,QAAM,CAACC,MAAD,IAAWJ,UAAU,CAACC,YAAD,CAA3B;AAEA,SAAOG,MAAM,IAAID,KAAK,CAACI,QAAvB;AACD;;IAJeQ,iB;;MAAAA,iB;AAMhB,OAAO,SAASC,aAAT,QAMgB;AAAA,MANO;AAC5BT,IAAAA,QAD4B;AAE5BU,IAAAA;AAF4B,GAMP;AACrB,sBACE,QAAC,iBAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA,kCACE;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,kBAAD;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGV,QAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;MAtBeS,a","sourcesContent":["import React, { useState, createContext, useContext } from \"react\";\nimport \"./Modal.css\";\n\ntype ModalContextType = [\n  boolean,\n  React.Dispatch<React.SetStateAction<boolean>>\n];\n\nconst ModalContext = createContext<ModalContextType>([false, () => {}]);\n\nexport function Modal(props: any): React.ReactElement {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  return <ModalContext.Provider value={[isOpen, setIsOpen]} {...props} />;\n}\n\ntype ModalButtonType = {\n  children: React.ReactElement;\n};\n\nexport function ModalOpenButton({\n  children: child,\n}: ModalButtonType): React.ReactElement {\n  const [, setIsOpen] = useContext(ModalContext);\n\n  return React.cloneElement(child, {\n    onClick: (e: any) => {\n      e.stopPropagation();\n      setIsOpen(true);\n    },\n  });\n}\n\nexport function ModalDismissButton({\n  children: child,\n}: ModalButtonType): React.ReactElement {\n  const [, setIsOpen] = useContext(ModalContext);\n\n  return React.cloneElement(child, {\n    onClick: (e: any) => {\n      e.preventDefault();\n      setIsOpen(false);\n    },\n  });\n}\n\nexport function ModalContentsBase(props: any): React.ReactElement {\n  const [isOpen] = useContext(ModalContext);\n\n  return isOpen && props.children;\n}\n\nexport function ModalContents({\n  children,\n  title,\n}: {\n  children: React.ReactElement;\n  title: string;\n}): React.ReactElement {\n  return (\n    <ModalContentsBase>\n      <div className=\"modal-container\">\n        <div className=\"modal\">\n          <header className=\"modal-hedear\">\n            <h3>{title}</h3>\n            <ModalDismissButton>\n              <button>X</button>\n            </ModalDismissButton>\n          </header>\n          {children}\n        </div>\n      </div>\n    </ModalContentsBase>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}