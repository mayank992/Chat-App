{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/AddUser.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"../../hooks/useMutation\";\nimport { ButtonWithSpinner } from \"../common/button/index\";\nimport { addUser, addUserToChannel } from \"../../helpers/index\";\nimport { ErrorMessage, SuccessMessage } from \"../common/Messages\";\nimport { CHAT_TYPE } from \"../../constants\";\nimport { useUser } from \"../../contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddUser(_ref) {\n  _s();\n\n  let {\n    chatType,\n    id\n  } = _ref;\n  const [user] = useUser();\n  const [username, setUsername] = useState(\"\");\n  const {\n    isLoading,\n    isError,\n    error,\n    isSuccess,\n    mutate\n  } = useMutation(username => {\n    if (chatType === CHAT_TYPE.DM) {\n      return addUser(id, username);\n    }\n\n    return addUserToChannel(userId, id, username);\n  });\n\n  function onChange(e) {\n    setUsername(e.target.value);\n  }\n\n  function handleAddUser(e) {\n    e.preventDefault();\n    mutate(username);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-user\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleAddUser,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWithSpinner, {\n        className: \"submit-btn\",\n        isLoading: isLoading,\n        type: \"submit\",\n        children: \"Add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), isSuccess && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        message: \"User added successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"d4/qBgyO6C5B+tSDM1kfhzNG3zU=\", false, function () {\n  return [useUser, useMutation];\n});\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/AddUser.tsx"],"names":["React","useState","useMutation","ButtonWithSpinner","addUser","addUserToChannel","ErrorMessage","SuccessMessage","CHAT_TYPE","useUser","AddUser","chatType","id","user","username","setUsername","isLoading","isError","error","isSuccess","mutate","DM","userId","onChange","e","target","value","handleAddUser","preventDefault","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,qBAA1C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,oBAA7C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,OAAO,SAASC,OAAT,OAAwE;AAAA;;AAAA,MAAvD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAuD;AAC7E,QAAM,CAACC,IAAD,IAASJ,OAAO,EAAtB;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM;AAAEe,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAmDlB,WAAW,CAGjEY,QAAD,IAAsB;AACtB,QAAIH,QAAQ,KAAKH,SAAS,CAACa,EAA3B,EAA+B;AAC7B,aAAOjB,OAAO,CAACQ,EAAD,EAAKE,QAAL,CAAd;AACD;;AAED,WAAOT,gBAAgB,CAACiB,MAAD,EAASV,EAAT,EAAaE,QAAb,CAAvB;AACD,GATmE,CAApE;;AAWA,WAASS,QAAT,CAAkBC,CAAlB,EAA0D;AACxDT,IAAAA,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AAED,WAASC,aAAT,CAAuBH,CAAvB,EAA4D;AAC1DA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,MAAM,CAACN,QAAD,CAAN;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEa,aAAjC;AAAA,8BACE;AAAA,6CAEE;AAAO,UAAA,KAAK,EAAEb,QAAd;AAAwB,UAAA,QAAQ,EAAES;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,iBAAD;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,SAAS,EAAEP,SAFb;AAGE,QAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAYGG,SAAS,iBAAI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAZhB,EAaGF,OAAO,iBAAI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEC,KAAK,CAACW;AAA7B;AAAA;AAAA;AAAA;AAAA,cAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1CenB,O;UACCD,O,EAE0CP,W;;;KAH3CQ,O","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"../../hooks/useMutation\";\nimport { ButtonWithSpinner } from \"../common/button/index\";\nimport { addUser, addUserToChannel } from \"../../helpers/index\";\nimport { ErrorMessage, SuccessMessage } from \"../common/Messages\";\nimport { CHAT_TYPE } from \"../../constants\";\nimport { useUser } from \"../../contexts/UserContext\";\n\nexport function AddUser({ chatType, id }: { id: string; chatType: CHAT_TYPE }) {\n  const [user] = useUser();\n  const [username, setUsername] = useState<string>(\"\");\n  const { isLoading, isError, error, isSuccess, mutate } = useMutation<\n    any,\n    any\n  >((username: string) => {\n    if (chatType === CHAT_TYPE.DM) {\n      return addUser(id, username);\n    }\n\n    return addUserToChannel(userId, id, username);\n  });\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setUsername(e.target.value);\n  }\n\n  function handleAddUser(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    mutate(username);\n  }\n\n  return (\n    <div className=\"add-user\">\n      <form className=\"form\" onSubmit={handleAddUser}>\n        <label>\n          Username:\n          <input value={username} onChange={onChange} />\n        </label>\n        <ButtonWithSpinner\n          className=\"submit-btn\"\n          isLoading={isLoading}\n          type=\"submit\"\n        >\n          Add user\n        </ButtonWithSpinner>\n        {isSuccess && <SuccessMessage message={\"User added successfully.\"} />}\n        {isError && <ErrorMessage message={error.message} />}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}