{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/pages/main/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { ChatArea } from \"../../components/chatArea/index\";\nimport { Sidebar } from \"../../components/sidebar/index\";\nimport { CHAT_TYPE } from \"../../constants/index\";\nimport { SplitPane } from \"../../components/library/SplitPane\";\nimport { useGetUserDetails } from \"../../hooks/useGetUserDetails\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const {\n    userData\n  } = useGetUserDetails();\n  const [selectedChat, setSelectedChat] = useState({\n    type: CHAT_TYPE.DM,\n    id: null\n  });\n  const selectedItem = selectedChat.type === CHAT_TYPE.DM ? userData === null || userData === void 0 ? void 0 : userData.connections.find(connection => connection.id === selectedChat.id) : userData === null || userData === void 0 ? void 0 : userData.channels.find(channel => channel.id === selectedChat.id);\n  const changeSelected = useCallback(toSelect => {\n    setSelectedChat(toSelect);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__body\",\n      children: /*#__PURE__*/_jsxDEV(SplitPane, {\n        minWidth: \"300px\",\n        leftPane: userData && /*#__PURE__*/_jsxDEV(Sidebar, {\n          users: userData.connections,\n          channels: userData.channels,\n          selected: selectedChat,\n          changeSelected: changeSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this),\n        rightPane: selectedItem && /*#__PURE__*/_jsxDEV(ChatArea, {\n          chatType: selectedChat.type,\n          id: selectedItem.id,\n          name: selectedItem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"5L+hlLOBfpa0zbFOcjXIxgQY+g4=\", false, function () {\n  return [useGetUserDetails];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/pages/main/index.tsx"],"names":["useState","useCallback","ChatArea","Sidebar","CHAT_TYPE","SplitPane","useGetUserDetails","Main","userData","selectedChat","setSelectedChat","type","DM","id","selectedItem","connections","find","connection","channels","channel","changeSelected","toSelect","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAO,YAAP;;AAOA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAeF,iBAAiB,EAAtC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAW;AACzDW,IAAAA,IAAI,EAAEP,SAAS,CAACQ,EADyC;AAEzDC,IAAAA,EAAE,EAAE;AAFqD,GAAX,CAAhD;AAKA,QAAMC,YAAY,GAChBL,YAAY,CAACE,IAAb,KAAsBP,SAAS,CAACQ,EAAhC,GACIJ,QADJ,aACIA,QADJ,uBACIA,QAAQ,CAAEO,WAAV,CAAsBC,IAAtB,CACGC,UAAD,IAAqBA,UAAU,CAACJ,EAAX,KAAkBJ,YAAY,CAACI,EADtD,CADJ,GAIIL,QAJJ,aAIIA,QAJJ,uBAIIA,QAAQ,CAAEU,QAAV,CAAmBF,IAAnB,CACGG,OAAD,IAAkBA,OAAO,CAACN,EAAR,KAAeJ,YAAY,CAACI,EADhD,CALN;AASA,QAAMO,cAAc,GAAGnB,WAAW,CAAEoB,QAAD,IAAwB;AACzDX,IAAAA,eAAe,CAACW,QAAD,CAAf;AACD,GAFiC,EAE/B,EAF+B,CAAlC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAC,OADX;AAEE,QAAA,QAAQ,EACNb,QAAQ,iBACN,QAAC,OAAD;AACE,UAAA,KAAK,EAAEA,QAAQ,CAACO,WADlB;AAEE,UAAA,QAAQ,EAAEP,QAAQ,CAACU,QAFrB;AAGE,UAAA,QAAQ,EAAET,YAHZ;AAIE,UAAA,cAAc,EAAEW;AAJlB;AAAA;AAAA;AAAA;AAAA,gBAJN;AAYE,QAAA,SAAS,EACPN,YAAY,iBACV,QAAC,QAAD;AACE,UAAA,QAAQ,EAAEL,YAAY,CAACE,IADzB;AAEE,UAAA,EAAE,EAAEG,YAAY,CAACD,EAFnB;AAGE,UAAA,IAAI,EAAEC,YAAY,CAACQ;AAHrB;AAAA;AAAA;AAAA;AAAA;AAdN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAhDuBf,I;UACDD,iB;;;KADCC,I","sourcesContent":["import { useState, useCallback } from \"react\";\nimport { ChatArea } from \"../../components/chatArea/index\";\nimport { Sidebar } from \"../../components/sidebar/index\";\nimport { CHAT_TYPE } from \"../../constants/index\";\nimport { SplitPane } from \"../../components/library/SplitPane\";\nimport { useGetUserDetails } from \"../../hooks/useGetUserDetails\";\nimport \"./Main.css\";\n\ntype Selected = {\n  type: CHAT_TYPE;\n  id: string | null;\n};\n\nexport default function Main() {\n  const { userData } = useGetUserDetails();\n  const [selectedChat, setSelectedChat] = useState<Selected>({\n    type: CHAT_TYPE.DM,\n    id: null,\n  });\n\n  const selectedItem =\n    selectedChat.type === CHAT_TYPE.DM\n      ? userData?.connections.find(\n          (connection: any) => connection.id === selectedChat.id\n        )\n      : userData?.channels.find(\n          (channel: any) => channel.id === selectedChat.id\n        );\n\n  const changeSelected = useCallback((toSelect: Selected) => {\n    setSelectedChat(toSelect);\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <div className=\"main__body\">\n        <SplitPane\n          minWidth=\"300px\"\n          leftPane={\n            userData && (\n              <Sidebar\n                users={userData.connections}\n                channels={userData.channels}\n                selected={selectedChat}\n                changeSelected={changeSelected}\n              />\n            )\n          }\n          rightPane={\n            selectedItem && (\n              <ChatArea\n                chatType={selectedChat.type}\n                id={selectedItem.id}\n                name={selectedItem.name}\n              />\n            )\n          }\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}