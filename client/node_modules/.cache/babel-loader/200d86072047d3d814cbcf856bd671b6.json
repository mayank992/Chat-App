{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/library/collapsible/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useToggle } from \"../../../hooks/useToggle\";\nimport { Arrow } from \"../arrow\";\nimport \"./Collapsible.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Collapsible(_ref) {\n  _s();\n\n  let {\n    defaultIsOpen = false,\n    headerContent,\n    children\n  } = _ref;\n  const {\n    isOpen,\n    toggle\n  } = useToggle(defaultIsOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapsible\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible__header\",\n      onClick: toggle,\n      children: [/*#__PURE__*/_jsxDEV(Arrow, {\n        direction: isOpen ? \"down\" : \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), headerContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible__content\",\n      children: isOpen && children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Collapsible, \"2JZRb2XuIg8Fa4hl5Fehfhv6vGo=\", false, function () {\n  return [useToggle];\n});\n\n_c = Collapsible;\nexport { Collapsible };\n\nvar _c;\n\n$RefreshReg$(_c, \"Collapsible\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/library/collapsible/index.tsx"],"names":["React","useToggle","Arrow","Collapsible","defaultIsOpen","headerContent","children","isOpen","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAO,mBAAP;;;AAQA,SAASC,WAAT,OAIyC;AAAA;;AAAA,MAJpB;AACnBC,IAAAA,aAAa,GAAG,KADG;AAEnBC,IAAAA,aAFmB;AAGnBC,IAAAA;AAHmB,GAIoB;AACvC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBP,SAAS,CAACG,aAAD,CAApC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,OAAO,EAAEI,MAA9C;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAED,MAAM,GAAG,MAAH,GAAY;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,aAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBAAuCE,MAAM,IAAID;AAAjD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhBQH,W;UAKoBF,S;;;KALpBE,W;AAkBT,SAASA,WAAT","sourcesContent":["import React from \"react\";\nimport { useToggle } from \"../../../hooks/useToggle\";\nimport { Arrow } from \"../arrow\";\nimport \"./Collapsible.css\";\n\ntype CollapsibleProps = {\n  defaultIsOpen: boolean;\n  headerContent: React.ReactNode;\n  children: React.ReactNode;\n};\n\nfunction Collapsible({\n  defaultIsOpen = false,\n  headerContent,\n  children,\n}: CollapsibleProps): React.ReactElement {\n  const { isOpen, toggle } = useToggle(defaultIsOpen);\n\n  return (\n    <div className=\"collapsible\">\n      <div className=\"collapsible__header\" onClick={toggle}>\n        <Arrow direction={isOpen ? \"down\" : \"right\"} />\n        {headerContent}\n      </div>\n      <div className=\"collapsible__content\">{isOpen && children}</div>\n    </div>\n  );\n}\n\nexport { Collapsible };\n"]},"metadata":{},"sourceType":"module"}