{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/common/button/Button.tsx\";\nimport { Spinner } from \"../spinner/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Button(_ref) {\n  let {\n    children,\n    className,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${className}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = Button;\nexport function ButtonWithSpinner(_ref2) {\n  let {\n    children,\n    isLoading,\n    className\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${className}`,\n    children: [children, isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ButtonWithSpinner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ButtonWithSpinner\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/common/button/Button.tsx"],"names":["Spinner","Button","children","className","restProps","ButtonWithSpinner","isLoading"],"mappings":";AAAA,SAASA,OAAT,QAAwB,kBAAxB;;AAQA,OAAO,SAASC,MAAT,OAAoE;AAAA,MAApD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuB,OAAGC;AAA1B,GAAoD;AACzE,sBAAO;AAAQ,IAAA,SAAS,EAAG,OAAMD,SAAU,EAApC;AAAA,cAAwCD;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAFeD,M;AAWhB,OAAO,SAASI,iBAAT,QAIoB;AAAA,MAJO;AAChCH,IAAAA,QADgC;AAEhCI,IAAAA,SAFgC;AAGhCH,IAAAA;AAHgC,GAIP;AACzB,sBACE;AAAQ,IAAA,SAAS,EAAG,OAAMA,SAAU,EAApC;AAAA,eACGD,QADH,EAEGI,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;MAXeD,iB","sourcesContent":["import { Spinner } from \"../spinner/index\";\n\ntype ButtonProps = {\n  children: React.ReactElement;\n  className: string;\n  [propName: string]: any;\n};\n\nexport function Button({ children, className, ...restProps }: ButtonProps) {\n  return <button className={`btn ${className}`}>{children}</button>;\n}\n\ntype ButtonWithSpinnerProps = {\n  children: React.ReactNode;\n  isLoading: boolean;\n  className: string;\n  [propName: string]: any;\n};\n\nexport function ButtonWithSpinner({\n  children,\n  isLoading,\n  className,\n}: ButtonWithSpinnerProps) {\n  return (\n    <button className={`btn ${className}`}>\n      {children}\n      {isLoading && <Spinner />}\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}