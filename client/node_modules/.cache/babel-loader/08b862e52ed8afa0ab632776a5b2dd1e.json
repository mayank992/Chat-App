{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nconst portalElem = document.getElementById(\"modal\");\nexport function Portal(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const el = useRef(document.createElement(\"div\"));\n  useEffect(() => {\n    const element = el.current;\n    portalElem === null || portalElem === void 0 ? void 0 : portalElem.appendChild(element);\n    return () => {\n      portalElem === null || portalElem === void 0 ? void 0 : portalElem.removeChild(element);\n    };\n  }, []);\n  return /*#__PURE__*/ReactDOM.createPortal(children, el.current);\n}\n\n_s(Portal, \"bH7R4hqe0oCFqrqYinS8ShQEwjI=\");\n\n_c = Portal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/Modal.tsx"],"names":["useEffect","useRef","ReactDOM","portalElem","document","getElementById","Portal","children","el","createElement","element","current","appendChild","removeChild","createPortal"],"mappings":";;AAAA,SAAgBA,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAnB;AAMA,OAAO,SAASC,MAAT,OAAqC;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAC1C,QAAMC,EAAE,GAAGP,MAAM,CAAiBG,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB,CAAjB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAGF,EAAE,CAACG,OAAnB;AAEAR,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAES,WAAZ,CAAwBF,OAAxB;AAEA,WAAO,MAAM;AACXP,MAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEU,WAAZ,CAAwBH,OAAxB;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUA,sBAAOR,QAAQ,CAACY,YAAT,CAAsBP,QAAtB,EAAgCC,EAAE,CAACG,OAAnC,CAAP;AACD;;GAdeL,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst portalElem = document.getElementById(\"modal\");\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport function Portal({ children }: Props) {\n  const el = useRef<HTMLDivElement>(document.createElement(\"div\"));\n\n  useEffect(() => {\n    const element = el.current;\n\n    portalElem?.appendChild(element);\n\n    return () => {\n      portalElem?.removeChild(element);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, el.current);\n}\n"]},"metadata":{},"sourceType":"module"}