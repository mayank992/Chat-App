{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/chatArea/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { ChatFeed } from \"./ChatFeed\";\nimport { ChatHeader } from \"./ChatHeader\";\nimport { ButtonWithSpinner } from \"../common/button\";\nimport { useSendMessage } from \"./hooks/useSendMessage\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = _ref => {\n  _s();\n\n  let {\n    chatType,\n    id,\n    name\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const chatFeedRef = useRef(null);\n  const {\n    isSendingMessage,\n    sendMessage\n  } = useSendMessage();\n  console.log(\"chat render\");\n\n  async function handleMessageSubmit(e) {\n    e.preventDefault();\n    sendMessage({\n      type: chatType,\n      to: id,\n      message\n    }, {\n      onSuccess: () => {\n        var _chatFeedRef$current;\n\n        (_chatFeedRef$current = chatFeedRef.current) === null || _chatFeedRef$current === void 0 ? void 0 : _chatFeedRef$current.refreshFeed();\n        setMessage(\"\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      id: id,\n      chatType: chatType,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFeed, {\n      chatType: chatType,\n      id: id,\n      ref: chatFeedRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"chat__footer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMessageSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat__message-input\",\n          placeholder: \"Message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonWithSpinner, {\n          isLoading: isSendingMessage,\n          disabled: message === \"\" || isSendingMessage,\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"X0HtDc8whazQ0F8TjeJS958N3Ls=\", false, function () {\n  return [useSendMessage];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/chatArea/index.tsx"],"names":["React","useState","useRef","ChatFeed","ChatHeader","ButtonWithSpinner","useSendMessage","Chat","chatType","id","name","message","setMessage","chatFeedRef","isSendingMessage","sendMessage","console","log","handleMessageSubmit","e","preventDefault","type","to","onSuccess","current","refreshFeed","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAO,YAAP;;AAQA,OAAO,MAAMC,IAAI,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,EAAZ;AAAgBC,IAAAA;AAAhB,GAAkC;AACrD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAMY,WAAW,GAAGX,MAAM,CAA4B,IAA5B,CAA1B;AACA,QAAM;AAAEY,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAoCT,cAAc,EAAxD;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AAEA,iBAAeC,mBAAf,CAAmCC,CAAnC,EAAwE;AACtEA,IAAAA,CAAC,CAACC,cAAF;AAEAL,IAAAA,WAAW,CACT;AACEM,MAAAA,IAAI,EAAEb,QADR;AAEEc,MAAAA,EAAE,EAAEb,EAFN;AAGEE,MAAAA;AAHF,KADS,EAMT;AACEY,MAAAA,SAAS,EAAE,MAAM;AAAA;;AACf,gCAAAV,WAAW,CAACW,OAAZ,8EAAqBC,WAArB;AACAb,QAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AAJH,KANS,CAAX;AAaD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEH,EAAhB;AAAoB,MAAA,QAAQ,EAAED,QAA9B;AAAwC,MAAA,IAAI,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF,QAApB;AAA8B,MAAA,EAAE,EAAEC,EAAlC;AAAsC,MAAA,GAAG,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEK,mBAAhB;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,UAAA,WAAW,EAAC,SAFd;AAGE,UAAA,KAAK,EAAEP,OAHT;AAIE,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACO,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,iBAAD;AACE,UAAA,SAAS,EAAEb,gBADb;AAEE,UAAA,QAAQ,EAAEH,OAAO,KAAK,EAAZ,IAAkBG,gBAF9B;AAGE,UAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA/CM;;GAAMP,I;UAG+BD,c;;;KAH/BC,I","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { ChatFeed } from \"./ChatFeed\";\nimport { ChatHeader } from \"./ChatHeader\";\nimport { CHAT_TYPE } from \"../../constants/index\";\nimport { ButtonWithSpinner } from \"../common/button\";\nimport { useSendMessage } from \"./hooks/useSendMessage\";\nimport \"./Chat.css\";\n\ntype Props = {\n  chatType: CHAT_TYPE;\n  id: string;\n  name: string;\n};\n\nexport const Chat = ({ chatType, id, name }: Props) => {\n  const [message, setMessage] = useState<string>(\"\");\n  const chatFeedRef = useRef<{ refreshFeed: () => {} }>(null);\n  const { isSendingMessage, sendMessage } = useSendMessage();\n  console.log(\"chat render\");\n\n  async function handleMessageSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    sendMessage(\n      {\n        type: chatType,\n        to: id,\n        message,\n      },\n      {\n        onSuccess: () => {\n          chatFeedRef.current?.refreshFeed();\n          setMessage(\"\");\n        },\n      }\n    );\n  }\n\n  return (\n    <div className=\"chat\">\n      <ChatHeader id={id} chatType={chatType} name={name} />\n      <ChatFeed chatType={chatType} id={id} ref={chatFeedRef} />\n      <footer className=\"chat__footer\">\n        <form onSubmit={handleMessageSubmit}>\n          <input\n            className=\"chat__message-input\"\n            placeholder=\"Message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <ButtonWithSpinner\n            isLoading={isSendingMessage}\n            disabled={message === \"\" || isSendingMessage}\n            type=\"submit\"\n          >\n            Send\n          </ButtonWithSpinner>\n        </form>\n      </footer>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}