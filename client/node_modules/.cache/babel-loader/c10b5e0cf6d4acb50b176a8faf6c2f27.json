{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/CreateChannel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useUser } from \"../../contexts/UserContext\";\nimport { useMutation } from \"../../hooks/useMutation\";\nimport { createChannel } from \"../../helpers/index\";\nimport { ButtonWithSpinner } from \"../common/button/index\";\nimport { ErrorMessage, SuccessMessage } from \"../common/Messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateChannel() {\n  _s();\n\n  const [user] = useUser();\n  const [channelName, setChannelName] = useState(\"\");\n  const {\n    data,\n    isLoading,\n    isError,\n    error,\n    isSuccess,\n    mutate\n  } = useMutation(channelName => createChannel(user.id, channelName));\n\n  function onChange(e) {\n    setChannelName(e.target.value);\n  }\n\n  function handleCreateChannel(e) {\n    e.preventDefault();\n    mutate({\n      channelName\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-channel\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateChannel,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Channel name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: channelName,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), isSuccess && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n          message: \"Channel created successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          message: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(ButtonWithSpinner, {\n          isLoading: false,\n          type: \"submit\",\n          disabled: isLoading,\n          children: \"Create Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateChannel, \"FFaDDVCPhkiQtub7gYkylRUOVgc=\", false, function () {\n  return [useUser, useMutation];\n});\n\n_c = CreateChannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChannel\");","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/components/sidebar/CreateChannel.tsx"],"names":["React","useState","useUser","useMutation","createChannel","ButtonWithSpinner","ErrorMessage","SuccessMessage","CreateChannel","user","channelName","setChannelName","data","isLoading","isError","error","isSuccess","mutate","id","onChange","e","target","value","handleCreateChannel","preventDefault","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,oBAA7C;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAM,CAACC,IAAD,IAASP,OAAO,EAAtB;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA,SAAnC;AAA8CC,IAAAA;AAA9C,MAAyDd,WAAW,CAGvEO,WAAD,IAAyBN,aAAa,CAACK,IAAI,CAACS,EAAN,EAAUR,WAAV,CAHkC,CAA1E;;AAKA,WAASS,QAAT,CAAkBC,CAAlB,EAA0D;AACxDT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;;AAED,WAASC,mBAAT,CAA6BH,CAA7B,EAAkE;AAChEA,IAAAA,CAAC,CAACI,cAAF;AACAP,IAAAA,MAAM,CAAC;AAAEP,MAAAA;AAAF,KAAD,CAAN;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEa,mBAAhB;AAAA,6BACE;AAAA,iDAEE;AAAO,UAAA,KAAK,EAAEb,WAAd;AAA2B,UAAA,QAAQ,EAAES;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGH,SAAS,iBACR,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAMGF,OAAO,iBAAI,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEC,KAAK,CAACU;AAA7B;AAAA;AAAA;AAAA;AAAA,gBANd,eAOE,QAAC,iBAAD;AACE,UAAA,SAAS,EAAE,KADb;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,QAAQ,EAAEZ,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAtCeL,a;UACCN,O,EAEgDC,W;;;KAHjDK,a","sourcesContent":["import React, { useState } from \"react\";\nimport { useUser } from \"../../contexts/UserContext\";\nimport { useMutation } from \"../../hooks/useMutation\";\nimport { createChannel } from \"../../helpers/index\";\nimport { ButtonWithSpinner } from \"../common/button/index\";\nimport { ErrorMessage, SuccessMessage } from \"../common/Messages\";\n\nexport function CreateChannel() {\n  const [user] = useUser();\n  const [channelName, setChannelName] = useState<string>(\"\");\n  const { data, isLoading, isError, error, isSuccess, mutate } = useMutation<\n    any,\n    any\n  >((channelName: string) => createChannel(user.id, channelName));\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setChannelName(e.target.value);\n  }\n\n  function handleCreateChannel(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    mutate({ channelName });\n  }\n\n  return (\n    <div className=\"create-channel\">\n      <form onSubmit={handleCreateChannel}>\n        <label>\n          Channel name:\n          <input value={channelName} onChange={onChange} />\n          {isSuccess && (\n            <SuccessMessage message={\"Channel created successfully.\"} />\n          )}\n          {isError && <ErrorMessage message={error.message} />}\n          <ButtonWithSpinner\n            isLoading={false}\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            Create Channel\n          </ButtonWithSpinner>\n        </label>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}