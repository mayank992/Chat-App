{"ast":null,"code":"import axios from \"axios\";\nimport { client } from \"../utils/apiClient\";\nimport { CHAT_TYPE } from \"../constants/index\";\nimport { HttpMethods } from \"../types/requestTypes\";\nexport function getUserDetails(userId, options) {\n  return client(\"/users/alldetails\", {\n    headers: {\n      userid: userId\n    },\n    ...options\n  });\n}\nexport async function getLatestMessages(userId, type, id, options) {\n  const url = type === CHAT_TYPE.DM ? `/connections/${id}/messages?limit=15` : `/channels/${id}/messages?limit=15`;\n  return client(url, {\n    headers: {\n      userid: userId\n    },\n    ...options\n  });\n}\nexport async function getChannelMembers(channelId, options) {\n  const res = await axios.get(`/channels/${channelId}/members`, { ...options\n  });\n  return res.data;\n}\nexport async function addUserToChannel(channelId, userId) {\n  await axios.post(`/channels/${channelId}/members`, {\n    userId\n  });\n}\nexport async function sendMessage(message) {\n  let url = message.type === CHAT_TYPE.DM ? `/users/${message.toId}/messages` : `/channels/${message.toId}/messages`;\n  const res = await axios.post(url, {\n    from: message.fromId,\n    to: message.toId,\n    message: message.text\n  }, {\n    headers: {\n      userid: message.fromId\n    }\n  });\n  return;\n}\nexport function login(_ref) {\n  let {\n    username,\n    firstname,\n    lastname\n  } = _ref;\n  return client(\"/users/login\", {\n    method: HttpMethods.POST,\n    data: {\n      username,\n      fullname: `${firstname} ${lastname}`\n    }\n  });\n}\nexport function createChannel(userId, channelName) {\n  return client(\"/channels\", {\n    data: {\n      channelName\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId\n    }\n  });\n}\nexport async function addUser(userId, username) {\n  return client(\"/dms\", {\n    data: {\n      username\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId\n    }\n  });\n}","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/helpers/index.ts"],"names":["axios","client","CHAT_TYPE","HttpMethods","getUserDetails","userId","options","headers","userid","getLatestMessages","type","id","url","DM","getChannelMembers","channelId","res","get","data","addUserToChannel","post","sendMessage","message","toId","from","fromId","to","text","login","username","firstname","lastname","method","POST","fullname","createChannel","channelName","addUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { client } from \"../utils/apiClient\";\nimport { CHAT_TYPE } from \"../constants/index\";\nimport { HttpMethods } from \"../types/requestTypes\";\n\nexport function getUserDetails(userId: string, options: any) {\n  return client(\"/users/alldetails\", {\n    headers: { userid: userId },\n    ...options,\n  });\n}\n\nexport async function getLatestMessages(\n  userId: string,\n  type: CHAT_TYPE,\n  id: string,\n  options: any\n) {\n  const url =\n    type === CHAT_TYPE.DM\n      ? `/connections/${id}/messages?limit=15`\n      : `/channels/${id}/messages?limit=15`;\n\n  return client(url, {\n    headers: { userid: userId },\n    ...options,\n  });\n}\n\nexport async function getChannelMembers(\n  channelId: string,\n  options: { [property: string]: any }\n) {\n  const res = await axios.get(`/channels/${channelId}/members`, { ...options });\n\n  return res.data;\n}\n\nexport async function addUserToChannel(channelId: string, userId: string) {\n  await axios.post(`/channels/${channelId}/members`, { userId });\n}\n\nexport async function sendMessage(message: {\n  type: CHAT_TYPE;\n  from: string;\n  fromId: string;\n  to: string;\n  toId: string;\n  text: string;\n}) {\n  let url =\n    message.type === CHAT_TYPE.DM\n      ? `/users/${message.toId}/messages`\n      : `/channels/${message.toId}/messages`;\n\n  const res = await axios.post(\n    url,\n    {\n      from: message.fromId,\n      to: message.toId,\n      message: message.text,\n    },\n    { headers: { userid: message.fromId } }\n  );\n\n  return;\n}\n\nexport function login({\n  username,\n  firstname,\n  lastname,\n}: {\n  username: string;\n  firstname: string;\n  lastname: string;\n}) {\n  return client(\"/users/login\", {\n    method: HttpMethods.POST,\n    data: {\n      username,\n      fullname: `${firstname} ${lastname}`,\n    },\n  });\n}\n\nexport function createChannel(userId: string, channelName: string) {\n  return client(\"/channels\", {\n    data: {\n      channelName,\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId,\n    },\n  });\n}\n\nexport async function addUser(userId: string, username: string) {\n  return client(\"/dms\", {\n    data: {\n      username,\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}