{"ast":null,"code":"import { client } from \"../utils/apiClient\";\nimport { CHAT_TYPE } from \"../constants/index\";\nimport { HttpMethods } from \"../types/requestTypes\";\nexport async function login(_ref) {\n  let {\n    username,\n    firstname,\n    lastname\n  } = _ref;\n  return client(\"/users/login\", {\n    method: HttpMethods.POST,\n    data: {\n      username,\n      name: `${firstname} ${lastname}`\n    }\n  });\n}\nexport async function getUserDetails(userId, options) {\n  return client(\"/users/alldetails\", {\n    headers: {\n      userid: userId\n    },\n    ...options\n  });\n}\nexport async function getLatestMessages(userId, type, id, options) {\n  const url = type === CHAT_TYPE.DM ? `/connections/${id}/messages?limit=15` : `/channels/${id}/messages?limit=15`;\n  return client(url, {\n    headers: {\n      userid: userId\n    },\n    ...options\n  });\n}\nexport async function getChannelMembers(channelId, options) {\n  return client(`/channels/${channelId}/members`, { ...options\n  });\n}\nexport async function sendMessage(userId, message) {\n  let url = message.type === CHAT_TYPE.DM ? `/connections/${message.to}/messages` : `/channels/${message.to}/messages`;\n  return client(url, {\n    data: {\n      type: message.type,\n      message: message.message\n    },\n    method: HttpMethods.POST,\n    headers: {\n      userid: message.from\n    }\n  });\n}\nexport async function createChannel(userId, createChannelReq) {\n  return client(\"/channels\", {\n    data: createChannelReq,\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId\n    }\n  });\n}\nexport async function addUserDm(userId, addUserReq) {\n  return client(\"/connections\", {\n    data: addUserReq,\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId\n    }\n  });\n}\nexport async function addUserChannel(channelId, addUserReq) {\n  return client(`/channels/${channelId}/members`, {\n    data: addUserReq,\n    method: HttpMethods.POST\n  });\n}","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/helpers/index.ts"],"names":["client","CHAT_TYPE","HttpMethods","login","username","firstname","lastname","method","POST","data","name","getUserDetails","userId","options","headers","userid","getLatestMessages","type","id","url","DM","getChannelMembers","channelId","sendMessage","message","to","from","createChannel","createChannelReq","addUserDm","addUserReq","addUserChannel"],"mappings":"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","sourcesContent":["import { client } from \"../utils/apiClient\";\nimport { CHAT_TYPE } from \"../constants/index\";\nimport { HttpMethods } from \"../types/requestTypes\";\n\nexport async function login({\n  username,\n  firstname,\n  lastname,\n}: {\n  username: string;\n  firstname: string;\n  lastname: string;\n}) {\n  return client(\"/users/login\", {\n    method: HttpMethods.POST,\n    data: {\n      username,\n      name: `${firstname} ${lastname}`,\n    },\n  });\n}\n\nexport async function getUserDetails(userId: string, options: any) {\n  return client(\"/users/alldetails\", {\n    headers: { userid: userId },\n    ...options,\n  });\n}\n\nexport async function getLatestMessages(\n  userId: string,\n  type: CHAT_TYPE,\n  id: string,\n  options: any\n) {\n  const url =\n    type === CHAT_TYPE.DM\n      ? `/connections/${id}/messages?limit=15`\n      : `/channels/${id}/messages?limit=15`;\n\n  return client(url, {\n    headers: { userid: userId },\n    ...options,\n  });\n}\n\nexport async function getChannelMembers(\n  channelId: string,\n  options: { [property: string]: any }\n) {\n  return client(`/channels/${channelId}/members`, { ...options });\n}\n\nexport async function sendMessage(\n  userId,\n  message: {\n    type: CHAT_TYPE;\n    to: string;\n    message: string;\n  }\n) {\n  let url =\n    message.type === CHAT_TYPE.DM\n      ? `/connections/${message.to}/messages`\n      : `/channels/${message.to}/messages`;\n\n  return client(url, {\n    data: {\n      type: message.type,\n      message: message.message,\n    },\n    method: HttpMethods.POST,\n    headers: { userid: message.from },\n  });\n}\n\nexport async function createChannel(\n  userId: string,\n  createChannelReq: { channelName: string }\n) {\n  return client(\"/channels\", {\n    data: createChannelReq,\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId,\n    },\n  });\n}\n\nexport async function addUserDm(\n  userId: string,\n  addUserReq: { username: string }\n) {\n  return client(\"/connections\", {\n    data: addUserReq,\n    method: HttpMethods.POST,\n    headers: {\n      userid: userId,\n    },\n  });\n}\n\nexport async function addUserChannel(\n  channelId: string,\n  addUserReq: { username: string }\n) {\n  return client(`/channels/${channelId}/members`, {\n    data: addUserReq,\n    method: HttpMethods.POST,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}