{"ast":null,"code":"import axios from \"axios\";\nimport { HttpMethods } from \"../types/requestTypes\";\nconst BASE_URL = \"\";\nexport async function client(endpoint) {\n  let {\n    data,\n    token,\n    method,\n    headers: customHeaders,\n    ...customConfig\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const config = {\n    url: endpoint,\n    baseURL: BASE_URL,\n    method: method || HttpMethods.GET,\n    body: data,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n      ...customHeaders\n    },\n    ...customConfig\n  };\n  console.log(config);\n  return axios(config).then(res => res.data).catch(error => error.response);\n}","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/utils/apiClient.ts"],"names":["axios","HttpMethods","BASE_URL","client","endpoint","data","token","method","headers","customHeaders","customConfig","config","url","baseURL","GET","body","Authorization","console","log","then","res","catch","error","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AAcA,OAAO,eAAeC,MAAf,CACLC,QADK,EASL;AAAA,MAPA;AACEC,IAAAA,IADF;AAEEC,IAAAA,KAFF;AAGEC,IAAAA,MAHF;AAIEC,IAAAA,OAAO,EAAEC,aAJX;AAKE,OAAGC;AALL,GAOA,uEADkB,EAClB;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAER,QADQ;AAEbS,IAAAA,OAAO,EAAEX,QAFI;AAGbK,IAAAA,MAAM,EAAEA,MAAM,IAAIN,WAAW,CAACa,GAHjB;AAIbC,IAAAA,IAAI,EAAEV,IAJO;AAKbG,IAAAA,OAAO,EAAE;AACPQ,MAAAA,aAAa,EAAEV,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EADpC;AAEP,sBAAgBD,IAAI,GAAG,kBAAH,GAAwB,EAFrC;AAGP,SAAGI;AAHI,KALI;AAUb,OAAGC;AAVU,GAAf;AAYAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,SAAOX,KAAK,CAACW,MAAD,CAAL,CACJQ,IADI,CACEC,GAAD,IAASA,GAAG,CAACf,IADd,EAEJgB,KAFI,CAEGC,KAAD,IAAWA,KAAK,CAACC,QAFnB,CAAP;AAGD","sourcesContent":["import axios from \"axios\";\nimport { HttpMethods } from \"../types/requestTypes\";\n\nconst BASE_URL = \"\";\n\ntype ReqHeaders = {\n  [header: string]: string;\n};\n\ntype CustomConfig = {\n  data?: any;\n  token?: string;\n  method?: HttpMethods;\n  headers?: ReqHeaders;\n  [key: string]: any;\n};\n\nexport async function client(\n  endpoint: string,\n  {\n    data,\n    token,\n    method,\n    headers: customHeaders,\n    ...customConfig\n  }: CustomConfig = {}\n) {\n  const config = {\n    url: endpoint,\n    baseURL: BASE_URL,\n    method: method || HttpMethods.GET,\n    body: data,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n      ...customHeaders,\n    },\n    ...customConfig,\n  };\n  console.log(config);\n\n  return axios(config)\n    .then((res) => res.data)\n    .catch((error) => error.response);\n}\n"]},"metadata":{},"sourceType":"module"}