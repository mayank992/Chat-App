{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"\";\nexport async function client(endpoint, userId) {\n  let {\n    data,\n    token,\n    method = \"GET\",\n    headers: customHeaders,\n    ...customConfig\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const config = {\n    url: endpoint,\n    baseURL: BASE_URL,\n    method,\n    data,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n      userid: userId || \"\",\n      // temporary header\n      ...customHeaders\n    },\n    ...customConfig\n  };\n  return axios(config).then(res => res.data);\n}","map":{"version":3,"sources":["/Users/mayank/Desktop/assignments/Chat-App/src/utils/apiClient.ts"],"names":["axios","BASE_URL","client","endpoint","userId","data","token","method","headers","customHeaders","customConfig","config","url","baseURL","Authorization","userid","then","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AAcA,OAAO,eAAeC,MAAf,CACLC,QADK,EAELC,MAFK,EAUL;AAAA,MAPA;AACEC,IAAAA,IADF;AAEEC,IAAAA,KAFF;AAGEC,IAAAA,MAAM,GAAG,KAHX;AAIEC,IAAAA,OAAO,EAAEC,aAJX;AAKE,OAAGC;AALL,GAOA,uEADkB,EAClB;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAET,QADQ;AAEbU,IAAAA,OAAO,EAAEZ,QAFI;AAGbM,IAAAA,MAHa;AAIbF,IAAAA,IAJa;AAKbG,IAAAA,OAAO,EAAE;AACPM,MAAAA,aAAa,EAAER,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EADpC;AAEP,sBAAgBD,IAAI,GAAG,kBAAH,GAAwB,EAFrC;AAGPU,MAAAA,MAAM,EAAEX,MAAM,IAAI,EAHX;AAGe;AACtB,SAAGK;AAJI,KALI;AAWb,OAAGC;AAXU,GAAf;AAcA,SAAOV,KAAK,CAACW,MAAD,CAAL,CAAcK,IAAd,CAAoBC,GAAD,IAASA,GAAG,CAACZ,IAAhC,CAAP;AACD","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"\";\n\ntype ReqHeaders = {\n  [header: string]: string;\n};\n\ntype CustomConfig = {\n  data?: any;\n  token?: string;\n  method?: \"GET\" | \"POST\" | \"PATCH\" | \"PUT\" | \"DELETE\";\n  headers?: ReqHeaders;\n  [key: string]: any;\n};\n\nexport async function client(\n  endpoint: string,\n  userId: string | null,\n  {\n    data,\n    token,\n    method = \"GET\",\n    headers: customHeaders,\n    ...customConfig\n  }: CustomConfig = {}\n) {\n  const config = {\n    url: endpoint,\n    baseURL: BASE_URL,\n    method,\n    data,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n      userid: userId || \"\", // temporary header\n      ...customHeaders,\n    },\n    ...customConfig,\n  };\n\n  return axios(config).then((res) => res.data);\n}\n"]},"metadata":{},"sourceType":"module"}